<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VSCode on Lencerf&#39;s Walk</title>
    <link>/tags/vscode/</link>
    <description>Recent content in VSCode on Lencerf&#39;s Walk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 11 Mar 2017 04:22:39 +0000</lastBuildDate>
    
        <atom:link href="/tags/vscode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2020 总结</title>
      <link>/post/2020-12-31-2020-review/</link>
      <pubDate>Thu, 31 Dec 2020 23:59:59 -0500</pubDate>
      
      <guid>/post/2020-12-31-2020-review/</guid>
      <description>
      
      <![CDATA[<p>2020年过去得如此之快，以至于又到了年终总结的时候。</p>
<p>2020年最大的感受就是在大时代的背景下，个人是如此的渺小。</p>
<p>一月和二月基本在写中期答辩报告和对付课程作业（网络安全和编译原理），以及忐忑不安地关注着新冠疫情的发展。</p>
<p>到了三月，美国的情况开始变得糟糕。学校课程都改成线上，导师也让我们尽量呆在家，组会也改成Skype了。三月初通过了中期答辩以后，我就没别的要挂念的事了，有了几个可以完全静下心来思考之前研究课题的时间。由于被关在家，作息逐渐颠倒，但是另一方面夜晚的安静确实让我有了可以全身心投入的机会。至今依然很怀念那个晚上：经过了连续几天的奋战，我终于对困惑我大半年的问题有了突破性的进展，有了几个非常激进的想法，以至于连续演算到凌晨六点，躺到床上后激动得睡不着，起身下床完成最后了推导，直到九点才彻底撑不住了昏昏睡去。</p>
<p>如我所料，我在组会上报告了这些（我自认为非常漂亮和优美）的新结果后，导师和学弟都很感兴趣。于是接下来的两个月，就是在和导师还有学弟合作全力把这个项目完成，因为国内有个组挂出了相关的工作，让导师有点紧张。期间连续Skype五六个小时都是家常便饭。5月10日晚上我把文章传到arXiv以后，难得以无比轻松的身心睡去。</p>
<p>第二天醒来后的周一，我就进入了这一年的第二个阶段——Google 的 Software Engineering 实习。因为新冠持续恶化，实习改成了远程，实习内容也被告知从 Android UI 开发改成了用 Rust 写 Virtual Machine Manger，而且是正式开始前两三天才告诉我，对硬件虚拟化一无所知的我只能硬着头皮上。庆幸的事，新项目的 host 非常 nice，是个在 firmware 领域耕耘了几十年的大牛，组里的其他成员也很友好。背负着拿 return offer 的压力，我开始了全力爆肝的三个月，一天都没有休息，梦里都在想着下一步怎么做。 开始的几个星期一边读 Intel Vol.3，一边翻现有 VMM 的代码，为了搞懂操作系统的一些启动原理也尝试去改了 Linux 代码。这些都是我以前从未接触也从未想象有一天会接触的内容，虽然很艰难但确实又很有意思。</p>
<p>到了六月，我把原理都搞懂的差不多了，用C写的一个模型也能跑几秒 Linux 了，于是开始正式用 Rust 开发。这期间是相当开心的，Rust 是我最喜欢的编程语言之一，在实践过程中对 Rust 很多概念和设计有了更深的理解。就这样很快到了八月初，我的 VMM 已经可以把一个简单的单核 Linux 跑起来，可以在终端里输命令，网络链接也有了。当我看到 <code>ping google.com</code> 顺利工作时，那种成就感是难以表达的。</p>
<p>八月初告别 host 和 Google，我又“回到了学校”，至此，痛苦的日子便开始了。</p>
<p>首先是跟负责我实习转正过程的 HR 较劲。在我请求了 host 帮忙催促以后，终于给我安排了八月底的面试，然而时间距离当时只剩不到一周。仓促准备之后就迎来了正式面试。第一轮很轻松，以至于后20分钟在和面试官扯淡；第二轮得意忘形，题是做出来了，但是面试完后两三天意识到我把简单的题做复杂了，瞬间感觉崩塌。</p>
<p>怀着忐忑不安和懊悔的心情痛苦地熬过了一个月。期间也投了很多其他公司，只有苹果和 Bloomberg 给了我回应。苹果的面试体验很好，但是不出意外地挂在了最终面，Bloomberg 的面试流程让我很不爽，面试要么官盛气凌人要么感觉比我还菜，最终因为我“算法不过关”把我挂了，摊手。</p>
<p>九月底，谷歌 HR 来信，我过了他们的Bar，加下来只需要等待分配组。长舒一口气，以为这四年来忐忑和焦虑的生活终于画上了句点。</p>
<p>然而命运就是这么喜欢开玩笑，几天后的一个晚上和父母通话时，因为一件小事我大动肝火，愤怒到了极点，情绪完全失控。第二天醒来，耳内轰鸣。开始我以为仅仅是身体疲劳，几天后意识到，我患上了耳鸣。耳鸣的原因自然是因为长年的焦虑和熬夜，前一晚的情绪失控则是导火索。在上网查找资料、看医生、询问同样患耳鸣的同学之后，我不得不接受事实：很有可能耳鸣要伴随我一生了。</p>
<p>经历了入睡困难、夜间每两个小时噩梦惊醒一次的三周后，十一月初得到了两个好消息，一个是 Google 的正式 offer，一个是上半年做的工作被 Physical Review Letters 接收了，耳鸣的情况也稍有好转。我意识到心态上压力的缓解是关键，于是干脆跟导师坦白，商量之后，就决定接下来的时间不做新的项目了，先写毕业论文，做点整理之前结果的轻松工作。</p>
<p>导师让我“不要有任何压力”，他还表示惊讶，觉得我“一直是个很有计划的人，把科研和找工作都安排得井井有条”。通话结束后我回想这句评价，不禁无奈地笑了：正是因为“井井有条”，因为心中时刻都有一张计划表，因为时时刻刻都紧绷着神经对照着计划表评价着自己做的是否足够好，才最终压垮了自己，把自己折腾成了现在这个样子。</p>
<p>于是这年剩余的两个月就像废人一样在家养病，慢慢悠悠地整理毕业论文。我也很感谢健身环大冒险这个游戏，在耳鸣最严重的时候，做运动可以让我暂时忘记痛苦。</p>
<p>回望2020，我得到了曾经梦寐以求的东西（工作 offer 和 PRL 一作论文），却失去了手中最为宝贵的东西——健康，以至于我现在做什么事情都感到有心无力。新的一年，我只求身体能缓慢恢复，但也许是奢求吧。</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>Introducing xhype: Virtual Machine Manager in Rust</title>
      <link>/post/2020-08-30-introducing-xhype/</link>
      <pubDate>Sun, 30 Aug 2020 13:17:21 -0400</pubDate>
      
      <guid>/post/2020-08-30-introducing-xhype/</guid>
      <description>
      
      <![CDATA[<p>Homepage: <a href="https://github.com/akaros/vmm-akaros/tree/master/xhype/xhype">akaros/vmm-akaros</a></p>
<p>xhype is a virtualization library on macOS written in Rust and based on the <a href="https://developer.apple.com/documentation/hypervisor">Hypervisor</a> framework. xhype requires at least macOS 10.15.</p>
<h2 id="virtual-thread-model">Virtual thread model</h2>
<p>xhype implements the virtual vthread model. The virtual thread model was proposed
by Google engineers and first implemented in <a href="https://github.com/akaros/akaros">Akaros OS</a>,
an experimental kernel from Berkeley. A slide introducing virtual threads can be found
<a href="https://docs.google.com/presentation/d/1hViGuqqyFcg8KOWNpCPWUOLBIyNmsVQa5WP3cWeB6uQ/edit#slide=id.p">here</a>.</p>
<p>In the virtual thread model, instead of a virtual machine being a special thing controlled by a device, as in Linux KVM, a VM, or a guest OS, is just some threads of the virtual machine manager. The physical memory address space a VM sees is the same as the virtual address space of the host process, thus a VM can easily share data with the host, which makes a VM’s IO more efficient.</p>
<p><img src="/img/xhype/vthreads.svg" alt="virtual threads and pthreads"></p>
<p>As we see, the host process has several pthreads and several virtual threads. A virthral thread is nothing special but a pthread executing a guest OS’s instructions. For example here virtual threads 1, 2, and 3 are executing codes of Guest OS 1. Virtual threads 4 and 5 are executing Guest OS 2. Let us take vthreads 4 and 5 as an example. From the point of view of guest 2, threads 4 and 5 are just two CPUs. Guest OS 2 might have its own threads (marked by green in the right panel), and it has its own kernel scheduler, which determines how its own threads are executed by vthread 4 and 5. Therefore effectively, a guest’s own threads are just green threads of the whole VMM process.</p>
<p>A guest sees the same memory space as the host, therefore it can share data with the host very easily. They can even share codes with the host. Here I show a very simple example. We just use a function called <code>doubel_a</code> of the host process as the kennel of a VM and spawn a virtual thread. This tiny guest just doubles the global variable <code>NUM_A</code> of the host process. As we could see, in the vthread model, starting a vm is just as easy as creating a few threads.</p>
<pre><code class="language-rust">use xhype::{vthread, VMManager};
use std::sync::Arc;

static mut NUM_A: i32 = 1;

fn double_a() {
    unsafe {
        NUM_A &lt;&lt;= 1;
    }
}

fn main() {
    let original_a = unsafe { NUM_A };
    let vmm = VMManager::new().unwrap();
    let vm = Arc::new(vmm.create_vm(1, None).unwrap());
    let handle1 = vthread::spawn(&amp;vm, double_a);
    handle1.join().unwrap();
    unsafe {
        assert_eq!(NUM_A, 2 * original_a);
    }
}
</code></pre>
<h2 id="the-design-of-xhype">The design of xhype</h2>
<p><img src="/img/xhype/xhype_design.svg" alt="xhype overview"></p>
<p>So my goal for this summer is to bring this virtual thread model to macOS and develop a VMM based on Apple’s Hypervisor framework and intel’s VTx hardware virtualization.
Here is the design of our VMM, we call it xhype. The VMM thread creates virtual machines, which contains the hardware provided to the guest OS.We implemented several kinds of Virtio hardware. The VMM spawns pthreads for hardware and virtual threads as virtual cpus. A virtual thread is either in the state of executing guest code or handling special requests of the guest OS. The interrupt from hardware to the virtual CPU is implemented with Rust channel.</p>
<p>As of today, we have eight thousand lines of Rust code and a few C and objective C codes to interact with macOS api. We implemented MMIO based virtio net devices, block devices, and random number generators. We implemented a linux kernel loader and a multiboot compliant kernel loader. We successively booted LInux 5.5 flash kernel with a 1.8 megabyte vmm executable.</p>
<p>In the future We might want to implement pci-based virti-io devices. We might want to use xhype as a tool to debug other OSes. We might also want to port xhype to other OSes or port it to ARM-based macOS. For sure in the current codebase, there are still several issues to be resolved.</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>2018 &amp; 2019 总结</title>
      <link>/diary/2019-12-26-2018-2019-review/</link>
      <pubDate>Thu, 26 Dec 2019 22:10:11 -0500</pubDate>
      
      <guid>/diary/2019-12-26-2018-2019-review/</guid>
      <description>
      
      <![CDATA[<p>过去的这两年可以说是我人生重要的转折点了，虽然18年末偷懒没有写总结，但我现在觉得很有必要把它补上。</p>
<h2 id="未来道路的选择">未来道路的选择</h2>
<p>科研还是转行的选择，经过这两年终于在我心中有了明确的答案。</p>
<p>18年上半年轻松的研究生活和暑假在香港与同领域同学们的交流让我觉得继续做学术未尝不是一个好的选择。仅仅过了两个月，当我心中的答案就快要“尘埃落定”时，来自两个审稿人对我研究论文的负面反馈让我备受打击。我开始重新思考道路的选择，甚至思考“我会什么会感到备受打击”这件事本身。我得出结论，我并不具备足够强的自我驱动力，我是一个需要正面反馈的人，做研究时取得进展那一刻的短暂强刺激不足以让我面对别人批判我的研究成果时再度振作起来。</p>
<p>19年的经历让我确认了“我不适合学术界，学术界也不适合我”的结论。</p>
<h2 id="博士研究进展">博士研究进展</h2>
<ul>
<li>18年暑假把做了一年多的结果投了出去，结果并没有获得审稿人的认可，至今仍在继续和审稿人较劲。</li>
<li>18年下半年经过半年多的探索总算找到了新课题并算出了一些有意思的结果，在19年初写成了稿子，然而导师并不怎么看重，至今稿子还躺在邮箱里，可能最终连 arXiv 都上不了了。</li>
<li>19年初接到导师新任务，让我把印度博后在模型B里工作在另一个模型A里算一算，好笑又好气的是，我早在18年中就把这些结果在模型A里算好发给导师抄送博后了，当时导师没重视，结果印度博后拿去在模型B里换汤不换药一顿计算拿到导师面前一顿乱吹，项目就变成他的了。好在导师公正，跟我道歉，并且把项目主要让我负责。当然，一开始导师让我“加入项目”的主要原因是印度博后过于拖拉半年了都没有在我的结果之上取得新进展，笑。</li>
<li>于是19年上半年天天爆肝到半夜把这个课题做完了，文章一轮审稿两正一负，审稿人A纯粹乱喷。怼过去以后，编辑也是和我们过不去，居然又找了审稿人D，于是二轮审稿，A和D两个腐朽的学阀合起来把我们的文章给拒掉了。目前正在绝赞appeal，<del>准备炸了APS</del>。</li>
</ul>
<p>回看了2017年的总结，不禁哑然失笑。2017年我写下了：</p>
<blockquote>
<p>还为了做组会报告去了解了 time crystal、dynamical quantum phase transition 等课题。但说实话这两个课题让我觉得很无聊。</p>
</blockquote>
<p>结果2018年和2019年分别做了一个 dynamical quantum phase transition 和一个 time crystal 的文章。命运可真是喜欢拿人开玩笑啊。</p>
<h2 id="转行的准备">转行的准备</h2>
<p>18年下半年修了网络，19年上半年修了操作系统，19年下半年修了数据库和图形学。</p>
<p>18年上半年偷懒没有上课。因为之前上完了算法课，我重新拾起信心开始挑战 LeetCode。从做easy磕磕碰碰到可以做medium，一点点取得进展还是很开心的事情。正如前文，我是一个信心不足、需要正反馈的人，而做题可以在短时间内收到正反馈，并且答案是机器验证的，而机器永远是对的，这给了我极大的精神鼓励。很长一段时间内，做题是我缓解内心焦虑的重要方式。</p>
<p>18年尝试去找19年的暑期实习，但是因为准备匆忙+实力不济，最终全部死在了简历关，一个面试都没有拿到。19年九月再次挑战，经过各路好友帮忙改简历、内推，加上经过一年提升实力，总算拿到了两个公司的实习面试。从18年初开始坚持刷题一年半终于有了正面回报，两个公司的算法面试都轻松通过，最后经过煎熬的 team match，签了去做 Android 开发的实习。</p>
<h2 id="对2020的展望">对2020的展望</h2>
<ul>
<li>希望能把握好来之不易的实习机会，认真表现争取拿到 return offer。</li>
<li>希望在卸下了重担以后，能抑制住内心的浮躁和焦虑，做一点自己满意的物理研究。</li>
</ul>
<p>尽人事，知天命。努力改变我能改变的，坦然接受我无能为力的。</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>Save the OpenGL rendering to an image file</title>
      <link>/post/2019-09-21-save-the-opengl-rendering-to-image-file/</link>
      <pubDate>Fri, 20 Sep 2019 02:54:31 -0500</pubDate>
      
      <guid>/post/2019-09-21-save-the-opengl-rendering-to-image-file/</guid>
      <description>
      
      <![CDATA[<p>Recent homework of the graphic course requires saving the OpenGL rendering to an image file. Although there are a lot of online postings related to this topic, here I record what I have done in case it may help someone or myself in the future.</p>
<h2 id="quick-answer">Quick answer</h2>
<p>First, we get the size of the window through <code>glfwGetFramebufferSize</code> and allocate a buffer <code>buffer</code>. Then we read image data using <code>glReadPixels</code> and write the data to file using <code>stbi_write_png</code>.</p>
<pre><code class="language-cpp">void saveImage(char* filepath, GLFWwindow* w) {
 int width, height;
 glfwGetFramebufferSize(w, &amp;width, &amp;height);
 GLsizei nrChannels = 3;
 GLsizei stride = nrChannels * width;
 stride += (stride % 4) ? (4 - stride % 4) : 0;
 GLsizei bufferSize = stride * height;
 std::vector&lt;char&gt; buffer(bufferSize);
 glPixelStorei(GL_PACK_ALIGNMENT, 4);
 glReadBuffer(GL_FRONT);
 glReadPixels(0, 0, width, height, GL_RGB, GL_UNSIGNED_BYTE, buffer.data());
 stbi_flip_vertically_on_write(true);
 stbi_write_png(filepath, width, height, nrChannels, buffer.data(), stride);
}
</code></pre>
<p>I used <a href="https://www.glfw.org">GLFW</a> to create windows and <a href="https://github.com/nothings/stb">stb</a> to write image data to png files.</p>
<h2 id="some-remarks">Some remarks</h2>
<h3 id="obtain-window-size">Obtain window size</h3>
<p>I see several options online. The first one is</p>
<pre><code class="language-cpp">GLint pView[4];
glGetIntegerv(GL_VIEWPORT, pView);
</code></pre>
<p>and we expect <code>pView[2]</code> and <code>pView[3]</code> to be the window width and height. This works if the window size is not adjusted by the user after the window is created. From what I have observed, if the window size is changed, on macOS, <code>pView</code> is updated to the latest window size automatically. However, <code>pView</code> remains unchanged on Windows 10. I have no idea why this is the case.</p>
<p>The second option is</p>
<pre><code class="language-cpp">glfwGetWindowSize(w, &amp;width, &amp;height);
</code></pre>
<p>this works on Windows but it does not go well with retina displays on macOS. The logical size (screen coordinate) of a window and the actual corresponding number of pixels may be different on macOS. <code>glfwGetWindowSize</code> gives the logical size but what we need is the size in pixels. For example, an 800x600 window in a retina display usually has <code>1800*1200</code> pixels.</p>
<p>Although the instructor only requires the homework run on Windows, I eventually find the solution from OpenGL&rsquo;s <a href="https://www.glfw.org/docs/latest/group__window.html#gaeea7cbc03373a41fb51cfbf9f2a5d4c6">doc</a>: use <code>glfwGetFramebufferSize</code>, which gives the window size in pixels.</p>
<h3 id="alignment-of-image-data">Alignment of image data</h3>
<p>It seems that most image file formats require the number of bytes used to store a single row of an image to be a multiple of 4, such <a href="https://en.wikipedia.org/wiki/BMP_file_format#Pixel_storage">bmp</a>. As a default, OpenG L also &ldquo;likes&rdquo; packing image data in this way since the default value of <code>GL_PACK_ALIGNMENT</code> is 4. I assume that this may enable OpenGL to do parallel computations more easily.</p>
<p>Anyway let me just follow this practice: <code>stride += (stride % 4) ? (4 - stride % 4) : 0;</code> makes sure that <code>stride</code> is a multiple of 4.</p>
<p>On the other hand, if I just do not want to follow this, then the following code also works:</p>
<pre><code class="language-cpp">GLsizei stride = nrChannels * width;
//stride += (stride % 4) ? (4 - stride % 4) : 0;
GLsizei bufferSize = stride * height;
std::vector&lt;char&gt; buffer(bufferSize);
glPixelStorei(GL_PACK_ALIGNMENT, 1);
glReadBuffer(GL_FRONT);
glReadPixels(0, 0, width, height, GL_RGB, GL_UNSIGNED_BYTE, buffer.data());
//...
</code></pre>
<h3 id="direction-of-the-y-axis">Direction of the y-axis</h3>
<p>The y-axis of the OpenGL screen coordinate goes upward but usually, the y-axis of an image file goes downward. Therefore, without <code>stbi_flip_vertically_on_write(true);</code>, the saved image file is flipped upside-down.</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>随感</title>
      <link>/diary/2019-09-04-thoughts/</link>
      <pubDate>Wed, 04 Sep 2019 00:14:19 -0400</pubDate>
      
      <guid>/diary/2019-09-04-thoughts/</guid>
      <description>
      
      <![CDATA[<center>（一）</center>
<p>上小学时，有一次姐姐买了个闹钟，到了点以后，会发出“宝宝起床、宝宝起床”的声音。我非常喜欢，于是奶奶也给我买了一个。</p>
<p>然而我买来的这个，到了点以后，发出的声音却是“懒虫起床、懒虫起床”。我跟奶奶说你听这个声音是“懒虫起床”，但是不知道是不是听力退化的原因，奶奶和爷爷均表示，明明是“宝宝起床”啊！我反复听了无数次都是“懒虫”，但无法说服爷爷奶奶。于是只能等到周末爸爸妈妈回来了以后，让他们当裁判。但让我失望的是，爸爸妈妈也表示是“宝宝起床”，并且搬出了我无法反对的理由：“懒虫”这两个字是骂人的话，闹钟设定一个骂人的声音哪里还卖得出去呢？</p>
<center>（二）</center>
<p>周一是劳工节，虽然还有一大堆工作没完成，但是黑人兄弟拉我去参加他们的 cookout party，想了想我还是去了。在现场认识了不少新的面孔，大家都需要相互介绍名字。果不其然，我需要耐心地教他们汉语里的 ü 这个音，毕竟英语里根本没有对应，一般只要对方发得大概有点接近，我就会说 Good 了，然而有个人总是发得差得很远，而且其他很容易发的音也偏得离谱。直到我教了他四五次以后，终于我的好朋友过来拍了拍那个人的头——原来这位一直读不准我名字的同学，平日里就不是一个“正经人”，总是喜欢开玩笑。他一直读不准我的名字，其实是在捉弄我。而我一直没意识到。</p>
<p>排除文化差异和语言壁垒，我从来不太会判断别人哪些话是无恶意的玩笑、哪些是懂了真格。因为自己很难把握开玩笑的界线，所以我说话时会竭力避免可能引起误会的词和可能让别人不舒服的举动，比如略带戏谑的外号我是不会叫的，发带有别人的照片时，也一定会征求同意，哪怕照片里只拍到了对方一只手。另一方面，由于不会判断，我就干脆默认把别人的发言都认为是认真的发言。所以我得出那个同学确实还不会读我的名字的结论，然后一遍遍教他；所以可能如果我是西片，我早就和擅长捉弄同学的高木同学彻底翻脸了。</p>
<center>（三）</center>
<p>今天晚上这两件事莫名突然一起出现在思绪里，忽然有点明白了什么。也许我一直清晰地记忆着说服爷奶父母失败的事情，并不是因为失败本身，而是因为，“&lsquo;懒虫&rsquo;这两个字是骂人的话”这句话，在当时还不太懂人情世故的我的心中，第一次给我划了一条开玩笑和动真格的界线（并且显然这条界线画得离正确的位置太远了），导致了我总是“一本正经”的状态。</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>给文章加上一个剧透警示</title>
      <link>/post/2018-01-06-add-a-warning-dialog-box-to-posts/</link>
      <pubDate>Sat, 06 Jan 2018 18:45:28 -0500</pubDate>
      
      <guid>/post/2018-01-06-add-a-warning-dialog-box-to-posts/</guid>
      <description>
      
      <![CDATA[<p>最近玩了《<a href="http://store.steampowered.com/app/206440/To_the_Moon/">To the Moon</a>》这款游戏，很想写写玩后感，但是这样一款胜在剧情的游戏，写感想不可避免会剧透。文章还没动笔写，我先来折腾一下怎样给博客文章加上有效的剧透警示。</p>
<p>基本思路是刚打开网页时，把文章正文盖住，并显示一个提示剧透的对话框，只有读者选择继续阅读以后，才显示文章内容。得益于 Hugo 强大的自定义能力，实现这个效果还是不难的。</p>
<p>首先给含有剧透的文章加上一个<code>warning</code>属性，包含了警示对话框所提示的文字：</p>
<pre><code>warning: &quot;以下内容含有《To the Moon》的剧透，如需继续阅读，点击下面的按钮。&quot;
</code></pre>
<p>之后修改 Hugo 的模版。文章正文包含在<code>article</code>标签里面，所以在渲染时，检查一下文章有没有<code>warning</code>属性，如果有，就默认加上模糊效果：</p>
<pre><code class="language-html">{{ if .Params.warning }}
&lt;article class=&quot;section&quot; style=&quot;filter:blur(8px);&quot;&gt;
{{ else }}
&lt;article class=&quot;section&quot;&gt;
{{ end }}
</code></pre>
<p>然后，文章有剧透时，显示一个对话框，警示有剧透。</p>
<pre><code class="language-html">{{ if .Params.warning }}
&lt;div id=&quot;indicator&quot; align=&quot;center&quot;&gt;
    &lt;div id=&quot;warning&quot;&gt;
        &lt;p&gt;{{.Params.warning}}&lt;/p&gt;
        &lt;a onclick=&quot;javascript:showContent();&quot; href=&quot;#&quot; class=&quot;button&quot; &gt;
        &lt;i class=&quot;fa fa-key&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;
        &gt;&gt;&gt; 
        &lt;i class=&quot;fa fa-lock&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;
        &lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
{{ end }}
</code></pre>
<p>对应的 CSS</p>
<pre><code class="language-css">#indicator {
    display: block;
    position: fixed;
    margin-top: 20%;
    z-index: 1;
    width: 100%;
    height: 100%;
    left: 0em;
    top: 0em;
}
#warning {
    background-color: #fefefe;
    margin: auto;
    padding: 20px;
    border: 1px solid #888;
    width: 60%;
    max-width: 720px;
}
</code></pre>
<p>此外，在读者选择继续阅读以后，用 js 关闭对话框并去掉正文部分的模糊效果：</p>
<pre><code class="language-js">var showContent = function() {
    document.getElementsByTagName(&quot;article&quot;)[0].setAttribute(&quot;style&quot;, &quot;filter: none;&quot;);
    document.getElementById(&quot;indicator&quot;).setAttribute(&quot;style&quot;, &quot;display: none;&quot;);
}
</code></pre>
<p>当然这样是不够的，因为，如果有读者是通过订阅 RSS 阅读本文的，RSS 阅读器会直接把内容显示，屏蔽剧透就失效了。好吧我知道本站没什么人访问，更没什么人订阅 RSS，我自己都好几年没打开 RSS 阅读器了。出于精益求精的原则，我还是修改一下 Hugo 的<a href="https://gohugo.io/templates/rss/#the-embedded-rss-xml">默认 RSS 模版</a>，把读者引导到网页上。</p>
<pre><code class="language-xml">&lt;description&gt;
{{ if not .Params.warning }}
{{ .Summary | html }}
{{ else }}
&lt;p&gt;View the original webpage: {{ .Permalink }}&lt;/p&gt;
{{end}}
&lt;/description&gt;
</code></pre>
<p>最终效果可见此文：<a href="/post/2018-01-05-to-the-moon-review">《〈To the Moon〉玩后感》</a>（如果显示404，说明我还没写完，或者坑了<a href="https://bgm.tv/img/smiles/tv/15.gif">#bgm38</a>）以及 <a href="/post/index.xml">rss</a> 。</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>《To the Moon》玩后感</title>
      <link>/post/2018-01-05-to-the-moon-review/</link>
      <pubDate>Fri, 05 Jan 2018 23:48:48 -0400</pubDate>
      
      <guid>/post/2018-01-05-to-the-moon-review/</guid>
      <description>
      
      <![CDATA[<p>View the original webpage: /post/2018-01-05-to-the-moon-review/</p> ]]>
      
      </description>
    </item>
    
    <item>
      <title>回顾 2017</title>
      <link>/diary/2017-12-30-2017-review/</link>
      <pubDate>Sat, 30 Dec 2017 17:18:27 -0400</pubDate>
      
      <guid>/diary/2017-12-30-2017-review/</guid>
      <description>
      
      <![CDATA[<p>View the original webpage: /diary/2017-12-30-2017-review/</p> ]]>
      
      </description>
    </item>
    
    <item>
      <title>在平面上画一个四维的笛卡尔坐标系</title>
      <link>/post/2017-07-14-draw-a-4d-coordinate-on-a-plane/</link>
      <pubDate>Fri, 14 Jul 2017 23:06:51 -0400</pubDate>
      
      <guid>/post/2017-07-14-draw-a-4d-coordinate-on-a-plane/</guid>
      <description>
      
      <![CDATA[<p>前几天在群里吹水的时候，我狂喷了2016年的一部冬季番<a href="https://bgm.tv/subject/139221">《Dimension W》</a>开头的某个画面：</p>
<p><img src="http://imgur.com/it4hpvJ.png" alt="截自第1话1分36秒处"></p>
<p>因为这张图太侮辱我的智商了，把X轴反向延长就成了第四次元轴W？我无法接受这么神棍的设定。这个画面使得我对本作第一印象极差，看完第一话后又没有发现任何别的吸引我的地方，于是弃番了。</p>
<p>今天把线性代数作业写完以后，我又想起这件事，于是便琢磨起该怎样正确地在一张纸上画一个四维的笛卡尔坐标系。因为我从未去过四维空间，所以我的大脑是无法想象一个四维空间的，只能靠用笔计算了。方法并不难，就是在四维空间中找一个平面，然后把四个坐标轴都投影到这个平面上。</p>
<p>四维空间中沿着四条坐标轴的基矢量是：<span class="jsonly">
     
        $$\left\{\begin{matrix}e_x=(1,0,0,0)\\e_y=(0,1,0,0)\\e_z=(0,0,1,0)\\e_w=(0,0,0,1)\end{matrix}\right.$$
    
</span>
选取两个矢量<span class="jsonly">
     
        $$\left\{\begin{matrix}a=(1,1,0,1)\\b=(0,1,1,2)\end{matrix}\right.$$
    
</span>
所在的平面作为投影平面 $m$。</p>
<p>把 $a$ 和 $b$ 排成一个 $4\times 2$ 的矩阵 $A$，<span class="jsonly">
     
        $$A=\left(\begin{array}{cc} 1 &amp; 0 \\ 1 &amp; 1 \\ 0 &amp; 1 \\ 1 &amp; 2 \end{array}\right)$$
    
</span>后面就是按部就班的计算了：<span class="jsonly">
     
        $$(A^T A)^{-1}A=\frac{1}{3}\left(\begin{array}{cccc} 2 &amp; 1 &amp; -1 &amp; 0 \\ -1 &amp; 0 &amp; 1 &amp; 1 \end{array}\right)$$
    
</span>
所以现在就知道，投影到 $m$ 上以后，$e_x$ 对应 $\frac{1}{3}(2a-b)$，以此类推。</p>
<p>接着要把 $m$ 还有投影后的方向矢量在图上画出来。首先计算 $a$ 和 $b$ 的模长与夹角：
$$||a|| = \sqrt{3},\  ||b||=\sqrt{6}$$
<span class="jsonly">
     
        $$\cos\langle a, b\rangle = \frac{a\cdot b}{||a||||b||}=\frac{1}{\sqrt{2}}$$
    
</span></p>
<p>那么我们就可以在平面 $m$ 上建立一个新坐标系，并且把 $a$，$b$ 分别取为 $a=(\sqrt{3},0)$, $b=(\sqrt{3},\sqrt{3})$. 然后
<span class="jsonly">
     
        $$\left(\begin{array}{cc} \sqrt{3} &amp; \sqrt{3} \\ 0 &amp; \sqrt{3} \end{array}\right)(A^T A)^{-1}A=\frac{1}{\sqrt{3}}\left(\begin{array}{cccc} 1 &amp; 1 &amp; 0 &amp; 1 \\ -1 &amp; 0 &amp; 1 &amp; 1 \end{array}\right)$$
    
</span>
所以在新坐标系上，$e_x$ 的投影就是 $\frac{1}{\sqrt{3}}(1,-1)$，以此类推。</p>
<p>最后画出来就是：
<img src="/img/wxyz.svg" alt="投影到一个平面上的四维笛卡尔坐标系"></p>
<p>当然，到此为止我都只考虑了纯粹的数学投影，没有考虑人体视觉。比如，通常我们在纸上画一个<a href="https://zh.wikipedia.org/zh-cn/%E7%AC%9B%E5%8D%A1%E5%84%BF%E5%9D%90%E6%A0%87%E7%B3%BB#/media/File:Cartesian_coordinates_3D.svg">三维坐标系时</a>，一般都会把某两个坐标系画成互相垂直，第三条坐标系夹在之间。然而用上面的方法可以证明，是不可能找到这样一个投影平面的。但这并不影响我们觉得画出来的坐标系很有立体感。</p>
<p>所以说，你们动画制作者还要学习一个，探索 W 维度，那也要按照数学和物理的基本法啊，对不对？要按照线性代数的基本原则去作画，去生成&hellip;当然人体的视觉原理也是很重要的。<a href="https://bgm.tv/character/47">阿虚</a>有句名言，叫</p>
<blockquote>
<p><a href="https://www.zhihu.com/question/27549696">フィクションにリアリティを求める奴のほうがどうかしていると思うが。</a></p>
</blockquote>
<p>识得唔识得啊？</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>MacBook Pro (15-inch, 2017) 开箱和使用感受</title>
      <link>/post/2017-06-16-macbook-pro-15-mid-2017/</link>
      <pubDate>Fri, 16 Jun 2017 16:02:49 -0400</pubDate>
      
      <guid>/post/2017-06-16-macbook-pro-15-mid-2017/</guid>
      <description>
      
      <![CDATA[<p>盼星星盼月亮，终于盼到了苹果更新 MacBook Pro 15&quot;。其实原本打算苹果16年更新 MacBook Pro 时就换新，然而还是不太敢做第一代 TouchBar 用户，加上老 MacBook Pro 13&quot; mid2012 虽然服役四年却没有什么大问题凑合能用，就决定再等等。喜剧的是没过多久老 Mac 的原配机械硬盘就坏了，只剩下 120GB 的固态硬盘可用，再加上开始用 Python 做科学计算，最近几个月明显感觉 Intel i5-3210 已经扛不住了。我原以为还得等到九月，没想到苹果在 WWDC 上就发布了更新。没有多想，我当晚就跟 <a href="http://refer.discover.com/s/tyfx6">Discover</a> 申请提额度，下单 256GB Silver。</p>
<p><img src="https://i.imgur.com/lcFXy2v.png" alt="两个月的搬砖工钱 T_T" style="
width: 416px"></p>
<p>等了一个星期，UPS 终于把的新 Mac 从上海送到了我这 midwest 小村里。以下图片用 iPhone 6s 在我的昏暗小房间里拍摄，就不要吐槽拍摄质量了。</p>
<p><img src="https://i.imgur.com/IPu7Cd0.jpg" alt="包裹，签收时 UPS 大叔惯例一脸嫌弃"></p>
<p><img src="https://i.imgur.com/W9ou7AQ.jpg" alt="拆开包裹"></p>
<p><img src="https://i.imgur.com/5bAfHnj.jpg" alt="打开外壳的盖子"></p>
<p><img src="https://i.imgur.com/fFhmziI.jpg" alt="取出 Mac 本体"></p>
<p><img src="https://i.imgur.com/fLqwyKK.jpg" alt="撕掉包装，掀开显示器，进行初始设置"></p>
<p>略微意外的是，盖子一打开，Mac 自动就开机进入初始设置界面。我记得四年前买上一台 Mac 的时候是需要手动开机。（不过等我进入系统看了下 uptime 就十几分钟，看来不至于是发货途中一直处于睡眠状态了。<a href="https://bgm.tv/img/smiles/tv/15.gif">#bgm38</a>）</p>
<p>设置完成后，查看系统信息：</p>
<p><img src="https://i.imgur.com/xspBmjB.png" alt="" style="
width: 698px;"></p>
<p>新老设备合照:
<img src="https://i.imgur.com/3TSMYYG.jpg" alt="">
<img src="https://i.imgur.com/W6eJoO6.jpg" alt="确实薄了许多"></p>
<p>用了几天的，Retina 加上15吋屏确实太爽了，我终于从13吋普通屏里解放了出来；键盘手感诡异，一时适应不了，经常按错；Touch Bar 确实是鸡肋，调控音量和屏幕亮度都需要两步操作，不如实体键来得快。我现在用得最多的两个 Touch Bar 功能是：</p>
<ol>
<li>看视频的时候的进度条直接显示在 Touch Bar 上，这样全屏时就不用移动鼠标去看进度条了；</li>
<li>锁定屏幕的虚拟键。（虽然之前也可以通过屏幕四角来触发。）</li>
</ol>
<p>另外，网页视频最大化、Safari 密码自动填充时会有卡顿，Sierra 果然还是打磨得不够。<a href="https://bjango.com/mac/istatmenus/">iStat Menus</a> 目前也获取不到风扇和 CPU 温度的信息，只能等待适配了。</p>
<p><img src="https://i.imgur.com/OE3rSjl.png" alt="不能看 CPU 温度浑身难受" style="
width: 259px;"></p>
<p>最后，天国的 ESC 键和众多扩展接口（USB、HDMI&hellip;）！</p>
<hr>
<p>2017-06-17 更新：今天看到 <a href="https://www.youtube.com/channel/UCmY3dSr-0TOkJqy0btd2AJg">DetroitBORG</a> 的<a href="https://www.youtube.com/watch?v=o1Kr6xCQhkM">开箱视频</a>，1分23秒处清晰可见他的机器也是一开显示器就开机，所以是我多虑了。</p>
<p>2016-06-21 更新：切换到新 Mac 以后一直觉得似乎屏幕字体变小了，直到在微博上看到有人<a href="http://weibo.com/1846569133/F8Pfshe4O">反馈</a>，才发现原来苹果把15吋的默认分辨率改成了 1690×1050。显示器的实际分辨率是 2880×1800，按照 Retina 2:1 缩放，应该默认 1440×900 才对。这就很坑了！</p>
<p><img src="https://i.imgur.com/SmTKGOx.png" alt="rMBP mid 2017 显示器默认分辨率" style="
width: 525px;">
<img src="https://i.imgur.com/whxKAbY.png" alt="同学的 rMBP mid 2015 默认显示器分辨率" style="
width: 525px;"></p>
<p>2017-07-14 更新：终于受不了 Safari 密码自动填充时的卡顿，上网寻找办法。根据 macpaw 的<a href="https://macpaw.com/how-to/fix-slow-safari">方法</a>，先完整地删除了 Safari 的所有缓存，然后删掉 ~/Library/Preferences/com.apple.Safari.plist，重启硬件。问题似乎解决，至少看不到明显的卡顿了。</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>Map a Double Well to a Spin System</title>
      <link>/post/2017-04-19-map-a-double-well-to-a-spin-system/</link>
      <pubDate>Wed, 19 Apr 2017 20:06:24 -0400</pubDate>
      
      <guid>/post/2017-04-19-map-a-double-well-to-a-spin-system/</guid>
      <description>
      
      <![CDATA[<p>Consider a very simple <a href="https://en.wikipedia.org/wiki/Double-well_potential">double well</a> model. We neglect the shape of the well and a particle only has two possible states: in the left well or the right well. Using creation operators, the two sates are
<span class="jsonly">
                  
        \(a_L^\dagger|0\rangle\)
    
</span> and <span class="jsonly">
                  
        \(a_R^\dagger|0\rangle\)
    
</span>, where <span class="jsonly">
                  
        \(|0\rangle\)
    
</span> is the vacuum state. If we have $2N$ particles, then all the Fork states are <span class="jsonly">
     
        $$|n, 2N-n\rangle = \frac{{a_L^\dagger}^n {a_R^\dagger}^{2N-n}}{\sqrt{n!(2N-n)!}}|0\rangle,\: n=0,1,\ldots,2N.$$
    
</span></p>
<p>Next, let us see what happens when the operator <span class="jsonly">
                  
        \(a_L^\dagger a_R\)
    
</span> hits on the ket: <span class="jsonly">
     
        $$a_L^\dagger a_R |n, 2N-n\rangle = \sqrt{(n&#43;1)(2N-n)}|n&#43;1, 2N-n-1\rangle.$$
    
</span>
one particle is moved from the right well to the left well and the &ldquo;length&rdquo; of the state vector is also changed because of the boson enhancement.</p>
<p>On the other hand, let us consider a spin-$N$ particle. It has $2N+1$ spin eigenstates: <span class="jsonly">
     
        $$|N,m\rangle_s,\: m=-N,\ldots,N.$$
    
</span></p>
<p>We also have the ladder operator $S_+$ which increase the $z$ component of spin by $\hbar$: <span class="jsonly">
     
        $$\frac{S_&#43;}{\hbar}|N, m\rangle_s = \sqrt{(N&#43;m&#43;1)(N-m)}|N, m&#43;1\rangle_s$$
    
</span></p>
<p>By taking the following map, <span class="jsonly">
     
        $$|n, 2N-n\rangle \mapsto |N,n-N\rangle_s$$
    
</span></p>
<p>we will find that the two equations above have the same structure. Thus we know <span class="jsonly">
                  
        \(a_L^\dagger a_R\)
    
</span> is just like the ladder operator <span class="jsonly">
                  
        \(S_&#43;\)
    
</span> in the spin system. Similarly, their Hermintian conjugates, <span class="jsonly">
                  
        \(a_R^\dagger a_L\)
    
</span> and <span class="jsonly">
                  
        \(S_-\)
    
</span>, have the similar relationship.</p>
<p>Now we can construct <span class="jsonly">
                  
        \(S_x\)
    
</span> and <span class="jsonly">
                  
        \(S_y\)
    
</span> for the double well system. Since <span class="jsonly">
                  
        \(S_x = \frac{S_&#43; &#43; S_-}{2}\)
    
</span> and <span class="jsonly">
                  
        \(S_y = \frac{S_&#43; - S_-}{2i}\)
    
</span> in the spin system, we thus have the following map</p>
<!--
| Spin | Double Well |
|:----:|-------------|
|<span class="jsonly">
                  
        \(S_x\)
    
</span>|<span class="jsonly">
                  
        \(\dfrac{1}{2}(a_L^\dagger a_R &#43; a_R^\dagger a_L)\)
    
</span>|
|<span class="jsonly">
                  
        \(S_y\)
    
</span>|<span class="jsonly">
                  
        \(\dfrac{1}{2i}(a_L^\dagger a_R - a_R^\dagger a_L)\)
    
</span>|
-->
<span class="jsonly">
     
        $$\dfrac{S_x}{\hbar} \mapsto \dfrac{1}{2}(a_L^\dagger a_R &#43; a_R^\dagger a_L)$$
    
</span>
<span class="jsonly">
     
        $$\dfrac{S_y}{\hbar} \mapsto \dfrac{1}{2i}(a_L^\dagger a_R - a_R^\dagger a_L)$$
    
</span>
<p>Finally, since
<span class="jsonly">
     
        $$S_z|N, n-N\rangle_s = (n-N)|N,n-N\rangle_s = \frac{n-(2N-n)}{2}|N, n-N\rangle_s,$$
    
</span> we can map <span class="jsonly">
                  
        \(S_z\)
    
</span> to <span class="jsonly">
                  
        \(\frac{1}{2}(n_L-n_R)=\frac{1}{2}(a_L^\dagger a_L - a_R^\dagger a_R)\)
    
</span>. Those conclusions still hold if <span class="jsonly">
                  
        \(N\)
    
</span> is an integer or a half-integer.</p>
<p>After established this map, we can consider the <a href="https://en.wikipedia.org/wiki/Bose%E2%80%93Hubbard_model">Bose–Hubbard model</a>. Assuming there are no interactions between the particles and this double well is perfectly symmetric, the Hamiltonian is then
<span class="jsonly">
     
        $$H=-J(a_L^\dagger a_R &#43; a_R^\dagger a_L)$$
    
</span>
Now we see this is equivalent to putting a spin-$N$ particle in a magnetic field <span class="jsonly">
                  
        \(\mathbf B = \frac{4Jm}{g\hbar q}\mathbf e_x\)
    
</span>.</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>LaTeX Best Practices</title>
      <link>/post/2017-03-17-latex-best-practices/</link>
      <pubDate>Fri, 17 Mar 2017 17:00:59 -0400</pubDate>
      
      <guid>/post/2017-03-17-latex-best-practices/</guid>
      <description>
      
      <![CDATA[<h2 id="equations-and-numbering">Equations and Numbering</h2>
<p>Simply speaking:</p>
<ul>
<li>use the environment <code>align</code> instead of <code>equation</code> and <code>eqnarray</code> to display equations.</li>
<li>put <code>align</code> blocks inside a <code>subequations</code> environment if subnumbers are required.</li>
<li>use <code>aligned</code> to break a single long equation with a single number into multiple lines.</li>
<li>put <code>\nonumber</code> before an equation if that equation does not need to be numbered. use <code>align*</code>
if no equations need to be numbered.</li>
</ul>
<p>Environments <code>align</code> and <code>aligned</code> are defined in package <a href="https://www.ctan.org/pkg/amsmath?lang=en">amsmath</a>.</p>
<p>Examples:</p>
<ol>
<li>A single equation</li>
</ol>
<pre><code class="language-tex">\begin{align}
\label{eq:massEnergyRelation}
E=mc^2
\end{align}
</code></pre>
<ol start="2">
<li>multiple equations</li>
</ol>
<pre><code class="language-tex">\begin{align}
    E=&amp;\hbar\Omega\\
    \vec p =&amp; \hbar\vec k
\end{align}
</code></pre>
<ol start="3">
<li>multiple equations with subnumbers</li>
</ol>
<pre><code class="language-tex">\begin{subequations}
\begin{align}
    \nonumber\dod{p_j}{t}&amp;=-\dpd{\mathcal H}{q_j}\\
    \dod{q_j}{t}&amp;=+\dpd{\mathcal H}{p_j}
\end{align}
\end{subequations}
</code></pre>
<ol start="4">
<li>A long equation broken into two lines</li>
</ol>
<pre><code class="language-tex">\begin{align}
\begin{aligned}
  M = &amp;\sum_n e^{in\theta}\ket{N-n, n}\bra{N-n, n} = \\
      &amp;\sum_l e^{i (N/2-l)\theta}\ket{l}\bar{l}
\end{aligned}
\end{align}
</code></pre>
<h2 id="derivatives">Derivatives</h2>
<p>Use packages <a href="https://www.ctan.org/pkg/physics?lang=en">physics</a> and <a href="https://www.ctan.org/pkg/esdiff">esdiff</a>.</p>
<pre><code class="language-tex">% those commands are from package physics
\dd x % differential
\dd[n] x % higher order differential
\dv{f}{x} % derivative df/dx
\dv[n]{f}{x} % higher order derivative
\pdv{f}{x} % partial derivative
\pdv[n]{f}{x} % higher order partial derivative
\pdf{f}{x}{y} % mixed partial  derivative
% the command below is from package esdiff
\diffp*{p}{V}{T} % partial derivative of p relative to V with T fixed.
</code></pre>
<h2 id="figures">Figures</h2>
<ol>
<li>Insert a single figure</li>
</ol>
<pre><code class="language-tex">\usepackage{graphicx} % should be put in the preamble
\begin{figure}
    \centering
    \includegraphics[width=\textwidth]{{y=x+0.1}.pdf} % pay attention to the filename
    \caption{$U/t=0.1$}
    \label{fig:y=x+0.1}
\end{figure}
</code></pre>
<ol start="2">
<li>Insert multiple figures with subcaptions respectively</li>
</ol>
<pre><code class="language-tex">\usepackage{graphicx} % should be put in the preamble
\usepackage{subcaption} % should be put in the preamble
\begin{figure}
    \centering
    \begin{subfigure}[b]{0.48\textwidth}
        \centering
        \includegraphics[width=\textwidth]{{analyticalResults}.pdf}
        \caption{Analytical Results}
        \label{fig:analyticalResults}
    \end{subfigure}
    \hfill
    \begin{subfigure}[b]{0.48\textwidth}
        \centering
        \includegraphics[width=\textwidth]{{imageFromExperiments}.eps}
        \caption{Image From Experiments}
        \label{fig:experimentalFigure}
    \end{subfigure}
    \caption{Analytical and experimental results.}
    \label{fig:analyticalAndExperimental}
\end{figure}
</code></pre>
<p>File names of images should be written as <code>{filename}.eps</code> in case there are some special characaters, like <code>.</code>, in the <code>filename</code> part.</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>VSCode extension for Beancount</title>
      <link>/post/2017-03-10-vscode-beancount/</link>
      <pubDate>Sat, 11 Mar 2017 04:22:39 +0000</pubDate>
      
      <guid>/post/2017-03-10-vscode-beancount/</guid>
      <description>
      
      <![CDATA[<p>Homepage: <a href="https://marketplace.visualstudio.com/items?itemName=Lencerf.beancount">Beancount on Marketplace</a></p>
<p>Installation: <code>ext install beancount</code></p>
<p>Source Code: <a href="https://github.com/Lencerf/vscode-beancount">Lencerf/vscode-beancount</a></p>
<p>This is a simple VSCode extension for <a href="http://furius.ca/beancount/">Beancount</a>, with the following features:</p>
<ul>
<li>Syntax highlight,</li>
<li>Decimal point alignment,</li>
<li>Current time quick insertion,</li>
<li>Auto indent for a new posting record.</li>
</ul>
<p>I wish to thank Chris for elaborating how to <a href="http://www.chrisstead.com/archives/1082/visual-studio-code-extensions-editing-the-document/">programmatically modify document contents</a> and Martin for sharing the Beancount <a href="https://github.com/draug3n/sublime-beancount/blob/master/beancount.tmLanguage">sytax file</a> with me.</p>
<p>I started making this extension after I tried VSCode for one day. Previously I really did not like Electron Apps, perhaps because of <a href="https://github.com/poooi/poi">POI</a> for KanColle. POI slowed down my Mac and caused the fan spin fast. Certainly, KanColle is based on Flash. So my Mac became even hotter. I also tried <a href="http://atom.io">Atom</a> before. It also resulted in heats. Several days ago, after reading a post on VSCode, I downloaded it and found it is really good. At least, VSCode is fast and &ldquo;cool&rdquo;(literally) and its <a href="https://marketplace.visualstudio.com/items?itemName=donjayamanne.python">Python</a> extension made me surprised. Writing Python in VSCode is just as pleasant as writing C# in Visual Studio. I can not bear the response delay of MacVim plus YouCompleteMe any more. So I decide to switch to VSCode.</p>
<p>But I did not find any existing VSCode extensions for Beancount. Although the syntax of Beancount is very simple, I still want a function to automatically align decimal points of commodities. That&rsquo;s why I make this extension, although at the same time I much finish Quantum Mechanics 2 take-home midterm.</p>
<p>VSCode changes my opinions of Electron Apps, Javascript, and Microsoft. Actually now I think my bad impression on Javascript may just come from the fact that I have never written any Javascript codes by myself.</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>再见 2016</title>
      <link>/diary/2016-12-31-see-you-2016/</link>
      <pubDate>Sat, 31 Dec 2016 14:03:51 -0500</pubDate>
      
      <guid>/diary/2016-12-31-see-you-2016/</guid>
      <description>
      
      <![CDATA[<p>View the original webpage: /diary/2016-12-31-see-you-2016/</p> ]]>
      
      </description>
    </item>
    
    <item>
      <title>launchd 和 click</title>
      <link>/post/2016-12-15-launchd-and-click/</link>
      <pubDate>Thu, 15 Dec 2016 10:16:18 -0500</pubDate>
      
      <guid>/post/2016-12-15-launchd-and-click/</guid>
      <description>
      
      <![CDATA[<p>起因是看了一篇介绍 <a href="http://furius.ca/beancount/">Beancount</a> 的<a href="https://wzyboy.im/post/1063.html">博文</a>后，我就变成了数豆狂魔，大概是心底某种控制欲被激发了出来，没事就喜欢打开 <a href="https://github.com/beancount/fava">fava</a> 研究自己那点生活补贴流向哪里了。每次开 fava 前都需要在终端里现开启之，有点麻烦，于是我就想让它一直运行在后台。在 macOS 上开启一个程序并让它一直运行在后台的方法自然是用 launchd，我很快就写好了配置文件：</p>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;
&lt;plist version=&quot;1.0&quot;&gt;
  &lt;dict&gt;
    &lt;key&gt;Label&lt;/key&gt;
    &lt;string&gt;lencerf.fava&lt;/string&gt;
    &lt;key&gt;ProgramArguments&lt;/key&gt;
    &lt;array&gt;
      &lt;string&gt;/usr/local/bin/fava&lt;/string&gt;
      &lt;string&gt;/Users/Lencerf/Dropbox/Application Data/BeanCount/main.bean&lt;/string&gt;
    &lt;/array&gt;
    &lt;key&gt;RunAtLoad&lt;/key&gt;
    &lt;true/&gt;
  &lt;/dict&gt;
&lt;/plist&gt;
</code></pre>
<p>然而 <code>launchctl load fava.plist</code> 后在浏览器里访问 <code>http://localhost:5000/</code> 却毫无反应。完全想不出问题出在哪里，本着控制变量的原则，我先尝试一下 bean-web。把 <code>/usr/local/bin/fava</code> 换成 <code>/usr/local/bin/bean-web</code> 后访问 <code>http://localhost:8080/</code>，可以打开 bean-web 页面，说明问题在 fava 身上。</p>
<p>但是 fava.plist 加载之后 fava 运行在后台，看不到任何输出信息，如何 debug 呢？Google 之后找到了办法，<a href="http://serverfault.com/questions/183589/how-do-i-activate-launchd-logging-on-os-x">这个页面</a>上提供了几个解决办法，我采用的第二个办法，指定输出到文件，在上面的 plist 文件中加入几个键值：</p>
<pre><code class="language-xml">&lt;key&gt;StandardOutPath&lt;/key&gt;
&lt;string&gt;/path/to/logfile.log&lt;/string&gt;
&lt;key&gt;StandardErrorPath&lt;/key&gt;
&lt;string&gt;/path/to/error.log&lt;/string&gt;
</code></pre>
<p>于是当我打开再次 <code>launchctl load fava.plist</code> 后，在 error.log 中看到了大量这样的输出：</p>
<pre><code class="language-shelloutput">Traceback (most recent call last):   File &quot;/usr/local/bin/fava&quot;, line 11, in &lt;module&gt;
    sys.exit(main())
  File &quot;/usr/local/lib/python3.5/site-packages/click/core.py&quot;, line 716, in __call__
    return self.main(*args, **kwargs)
  File &quot;/usr/local/lib/python3.5/site-packages/click/core.py&quot;, line 675, in main
    _verify_python3_env()
  File &quot;/usr/local/lib/python3.5/site-packages/click/_unicodefun.py&quot;, line 119, in _verify_python3_env
    'mitigation steps.' + extra)
RuntimeError: Click will abort further execution because Python 3 was configured to use ASCII as encoding for the environment.  Either run this under Python 2 or consult http://click.pocoo.org/python3/ for mitigation steps.

This system lists a couple of UTF-8 supporting locales that
you can pick from.  The following suitable locales where
discovered: af_ZA.UTF-8, am_ET.UTF-8, be_BY.UTF-8, bg_BG.UTF-8, ca_ES.UTF-8, cs_CZ.UTF-8, da_DK.UTF-8, de_AT.UTF-8, de_CH.UTF-8, de_DE.UTF-8, el_GR.UTF-8, en_AU.UTF-8, en_CA.UTF-8, en_GB.UTF-8, en_IE.UTF-8, en_NZ.UTF-8, en_US.UTF-8, es_ES.UTF-8, et_EE.UTF-8, eu_ES.UTF-8, fi_FI.UTF-8, fr_BE.UTF-8, fr_CA.UTF-8, fr_CH.UTF-8, fr_FR.UTF-8, he_IL.UTF-8, hr_HR.UTF-8, hu_HU.UTF-8, hy_AM.UTF-8, is_IS.UTF-8, it_CH.UTF-8, it_IT.UTF-8, ja_JP.UTF-8, kk_KZ.UTF-8, ko_KR.UTF-8, lt_LT.UTF-8, nl_BE.UTF-8, nl_NL.UTF-8, no_NO.UTF-8, pl_PL.UTF-8, pt_BR.UTF-8, pt_PT.UTF-8, ro_RO.UTF-8, ru_RU.UTF-8, sk_SK.UTF-8, sl_SI.UTF-8, sr_YU.UTF-8, sv_SE.UTF-8, tr_TR.UTF-8, uk_UA.UTF-8, zh_CN.UTF-8, zh_HK.UTF-8, zh_TW.UTF-8
</code></pre>
<p>看上去和 click 这个 Python 包有点关系，搜索了一番，看了看这个 <a href="https://github.com/madjar/nox/issues/19">issue</a>，猜想可能和没有指定语言有关系，看来需要想办法在 fava.plist 中指定相关的环境变量，</p>
<pre><code class="language-xml">&lt;key&gt;EnvironmentVariables&lt;/key&gt;
&lt;dict&gt;
    &lt;key&gt;LANG&lt;/key&gt;
    &lt;string&gt;en_US.UTF-8&lt;/string&gt;
&lt;/dict&gt;
</code></pre>
<p>再次加载，成功！</p>
<p>（实际解决问题的过程比这复杂多了，中间走了歪路差不多把 /usr/local/bin/fava 自己写了一遍。真是大大的 <a href="https://bgm.tv/img/smiles/tv/15.gif">bgm38</a>。</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>用树莓派3搭一个简易的 NAS</title>
      <link>/post/2016-12-16-build-a-simple-nas-using-raspberry-pi/</link>
      <pubDate>Tue, 06 Dec 2016 21:48:10 -0500</pubDate>
      
      <guid>/post/2016-12-16-build-a-simple-nas-using-raspberry-pi/</guid>
      <description>
      
      <![CDATA[<p>先放结论：这个简易 NAS 真的非常简易，大概就是一个无线存储盘的效果。如果需要一个比较可靠的 NAS，多掏点银子买专业的吧。</p>
<p>在升级 macOS Sierra 的当天晚上，我的 Mac 原配的 HDD 就坏了（绝对是库克干的好事），只剩下一块 120GB 的 SSD 作为唯一内置存储设备。我原本已经有一块 1TB 的移动硬盘，但是也已经塞满了。为了满足存储需要只能再去买了一块 2TB 的盘。两块盘同时插在机子上很麻烦，笔记本的可移动性大大降低了。于是我想到了用树莓派搭一个简易 NAS，把移动硬盘变成无线硬盘。</p>
<p>材料：</p>
<ol>
<li>树莓派 Raspberry Pi 3 Model B 及电源线和适配器</li>
<li>Micro SD Card</li>
<li>移动硬盘</li>
<li>带独立供电的 USB Hub</li>
</ol>
<p>此外在配置过程中需要显示器、键盘和鼠标，没有这些设备的话理论上也行，但是会相当麻烦。</p>
<h2 id="系统安装">系统安装</h2>
<p>首先安装官网上的<a href="https://www.raspberrypi.org/documentation/installation/installing-images/README.md">指引</a>，下载 Raspbian 系统镜像并安装到 Micro SD Card 之上。</p>
<h2 id="配置-raspbian">配置 Raspbian</h2>
<p>把 Micor SD Card 插入树莓派，接上电源、显示器、鼠标、键盘，呈现在眼前的就如同一台普通的 Linux 计算机了。在终端里键入 <code>sudo raspy-config</code> 可以配置，有这么几个必须进行的操作：</p>
<ol>
<li>开启 ssh，这样今后进行一些简易维护就不需要显示器等设备了。</li>
<li>修改密码。Raspbian 的默认用户名和密码分别是 pi 和 raspberry，改掉密码可以防止不怀好意的人登陆你的树莓派。</li>
<li>修改键盘布局和语言。树莓派是英国的树莓派基金会所开发，所以默认键盘布局和语言都是英式。更换布局的具体步骤可参见<a href="http://henson.github.io/post/raspberrypi4/">这篇文章</a>。</li>
</ol>
<h2 id="修改用户-pi-的-uid">修改用户 pi 的 uid</h2>
<p>需要这一步操作的原因是我选择 HFS+ 作为移动硬盘的文件格式，由于这种文件格式的特性，简而言之，每个文件记录了它的拥有者的 uid，如果当前用户的 uid 和文件里记录的 uid 不一致，那么就无权访问。macOS 上第一个用户的 uid 是 501，而树莓派上默认用户 pi 的 uid 是一个四位数，所以要把 pi 的 uid 改成 501，这样读写就不会遇到麻烦了。</p>
<p>在 macOS 上执行 <code>id</code> 命令可以查看自己的 uid，如果不是 501，那么下面的命令里应该换成正确的数值。</p>
<p>修改用户 pi 的 uid 需要注销并登陆到 root 账户上去改，树莓派默认又是锁定了 root 账户的。首先为 root 账户设置密码</p>
<pre><code class="language-bash">sudo passwd root
</code></pre>
<p>然后解锁 root 账户</p>
<pre><code class="language-bash">sudo passwd --unlock root
</code></pre>
<p>之后去 raspi-config 里面把启动选项改成 Console，重启树莓派登入 root 账户并修改 uid：</p>
<pre><code class="language-bash">usermod -u 501 pi
</code></pre>
<p>然后再去 raspi-config 里把启动选项改回 Desktop Autologin，返回 pi 账户进行下一步操作。</p>
<h2 id="开启文件共享">开启文件共享</h2>
<p>安装 netatalk 和 avahi-daemon</p>
<pre><code class="language-bash">sudo apt-get update; sudo apt-get upgrade; sudo apt-get install netatalk avahi-daemon
</code></pre>
<p>安装完后，如果笔记本和树莓派连接到同一无线局域网，应该就能在 Finder 的侧栏看到树莓派了，用 pi 用户登陆可以访问 Home Directory，也就是 Raspbian 上 pi 用户的主文件夹。当然我需要的是访问移动硬盘。把移动硬盘通过 USB Hub 接上树莓派。首先确认在 Raspbian 系统下能够正常读写移动硬盘，如果移动硬盘采用了 HFS+ 或者 NTFS 之类的文件格式，还需要安装相应的软件包。对于 HFS+ 格式：</p>
<pre><code class="language-bash">sudo apt-get install hfsprogs
</code></pre>
<p>然后修改 netatalk 的共享设置</p>
<pre><code class="language-bash">sudo nano /etc/netatalk/AppleVolumes.default
</code></pre>
<p>可以看到里面已经默认共享了用户主目录。加上共享移动硬盘：<code>/media/pi/mydrive “mydrive”</code>。重启 netatalk:</p>
<pre><code class="language-bash">sudo service netatalk restart
</code></pre>
<h2 id="硬盘睡眠">硬盘睡眠</h2>
<p>最后，硬盘不工作时应当让它进入睡眠，我就不啰嗦了，直接看<a href="http://mkitby.com/2016/05/15/raspberry-pi-nas-manage-hdd-power/">这里</a>。</p>
<h2 id="效果">效果</h2>
<p>从树莓派里下载文件大概是 1MB/s，看个普通的视频足够了，凑合用吧。</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>八月小结</title>
      <link>/diary/2016-08-31-the-first-august/</link>
      <pubDate>Wed, 31 Aug 2016 21:05:13 -0500</pubDate>
      
      <guid>/diary/2016-08-31-the-first-august/</guid>
      <description>
      
      <![CDATA[<p>View the original webpage: /diary/2016-08-31-the-first-august/</p> ]]>
      
      </description>
    </item>
    
    <item>
      <title>曲面积分复习跳坑笔记</title>
      <link>/post/2016-07-11-notes-on-surface-integral/</link>
      <pubDate>Mon, 11 Jul 2016 01:05:13 +0800</pubDate>
      
      <guid>/post/2016-07-11-notes-on-surface-integral/</guid>
      <description>
      
      <![CDATA[<p>在复习曲面积分的时候发现对当年初学的真的没有怎么理解透，基本就是死背公式了，于是复习的时候踩了不少坑，特别是变换参数时雅可比行列式的理解。故将现在的理解记录下来以防忘记。</p>
<p>首先从普通<strong>二重积分</strong>出发。设想物理场景：求一块面密度为 $\rho(x,y)$ 的不均匀板的质量 $m$。显然，
$$m=\iint_S\rho(x,y)dxdy,$$
$S$ 代表板面。当然板不一定是矩形，所以这个积分不一定好算。假设存在变换，
$$\begin{cases} x = x(u,v)\\ y = y(u,v)\end{cases}, u\in[a,b], v\in[c,d],$$
以 $u, v$ 为被积分参数，$m$ 的表达式为
<span class="jsonly">
     
        $$m=\int_a^bdu\int_c^d\rho(x(u,v),y(u,v))|J(u,v)|dv,$$
    
</span>
$|J(u,v)|$ 是雅可比行列式的绝对值，而雅可比行列式的定义为
$$J(u,v)=\begin{vmatrix} \partial_ux &amp; \partial_vx \\ \partial_uy &amp; \partial_vy \end{vmatrix},$$
主要在于如何比较直观地理解雅可比行列式。看了知乎上<a href="http://zhihu.com/question/29964930/answer/51632832">这个回答</a>后受到启发，现在的理解如下：在 $u, v$ 空间中，当 $u$ 从 $u_0$ 变化到 $u_0+du$ 时，$x, y$ 空间（下称“实空间”）中对应的点扫过一段弧长，这段弧长可以用向量 $d\vec{u}=(\frac{\partial x}{\partial u}du, \frac{\partial y}{\partial u}du)$ 来替代；同理 $v$ 从 $v_0$ 变化到 $v_0+dv$ 时对应实空间中的向量 $d\vec{v}=(\frac{\partial x}{\partial v}dv, \frac{\partial y}{\partial v}dv)$。因此 $u, v$ 空间中一个 $dudv$ 的面元对应了实空间中以 $d\vec{u}, d\vec{v}$ 这两个向量为邻边的平行四边形区域。当 $(u, v)$ 遍历其定义域时，这些小平行四边形能够覆盖 $x, y$ 的定义域。每个小平行四边形的面积是 $|d\vec{u}\times d\vec{v}|$，也就是 $|J|$，所以 $m$ 可以表达为：$$m \approx \sum\rho(x(u,v), y(u,v))|J|,$$ 求和变积分，就可以得到上面$m$的表达式了。</p>
<p>比普通二重积分复杂一点的是<strong>第一型曲面积分</strong>。简单地说，普通二重积分中的板是一块平板，所以我们可以直接在平板上建立平面直角坐标系；第一型曲线积分中的板是一块曲面板，我们只能在外部建立空间直角坐标系然后用方程去描述曲面的形状。具体的表达式是：
$$m=\iint_S\rho(x,y,z)dS,$$
其中 $dS$ 是曲面 $S$ 上的一块面元。现在假设曲面可以用参数方程描述：
$$\begin{cases} x = x(u,v)\\ y = y(u,v)\\ z=z(u,v)\end{cases}, u\in[a,b], v\in[c,d],$$
$m$ 用对 $u, v$ 的积分表达为
$$m=\int_a^b du\int_c^d\rho(x(u,v),y(u,v),z(u,v))\sqrt{A^2+B^2+C^2}dv$$
式中的 $A, B, C$ 分别为
$$A=\begin{vmatrix} \partial_uy &amp; \partial_uz \\ \partial_vy &amp; \partial_vz \end{vmatrix},B=\begin{vmatrix} \partial_uz &amp; \partial_ux \\ \partial_vz &amp; \partial_vx \end{vmatrix}, C=\begin{vmatrix} \partial_ux &amp; \partial_uy \\ \partial_vx &amp; \partial_vy \end{vmatrix},$$
理解方式和前面是一样的，只是现在 $d\vec{u}$ 和 $d\vec{v}$ 是是三维矢量了，表达式分别是：
$$d\vec{u} =(\frac{\partial x}{\partial u}, \frac{\partial y}{\partial u}, \frac{\partial z}{\partial u})dv$$
$$d\vec{v} =(\frac{\partial x}{\partial v}, \frac{\partial y}{\partial v}, \frac{\partial z}{\partial v})dv$$
算一下 $|d\vec{u}\times d\vec{v}|$ 就能得到 $\sqrt{A^2+B^2+C^2}dudv$ 了。</p>
<p>最后是相对最复杂的<strong>第二型曲面积分</strong>。我们得换一个物理场景了：考虑电流密度场 $\vec{j}(x,y,z)$ 空间中一个曲面 $C(x,y,z)=0$，求通过曲面的电流强度 $I$。$I$ 的表达式不难写出：
$$I=\iint_C\vec{j}(x,y,z)\cdot d\vec{S},$$
其中 $d\vec{S}=\vec{e}_ndS$，$dS$ 是曲面上的面元，$\vec{e}_n$ 代表这一点面元的法向单位矢量。事实上把 $d\vec{S}$ 代入积分式中就能把第二型曲面积分转化成第一型曲面积分
$$I=\iint_C(\vec{j}(x,y,z)\cdot\vec{e}_n) dS,$$
此时被积分函数就是 $\vec{j}(x,y,z)\cdot\vec{e}_n$。为了求出曲面上每一点处的法矢 $\vec{e}_n$ 的表达式，我们需要利用曲面 $C$ 的参数表达式
$$\begin{cases} x = x(u,v)\\ y = y(u,v)\\ z=z(u,v)\end{cases}, u\in[a,b], v\in[c,d],$$
可以想象，曲面上某点 $(x,y,z)$ 处的法向单位矢量与该点对应的矢量 $d\vec{u}\times d\vec{v}$ 平行，但是有可能相同或相反，这个问题先放一边，我们可以把 $\vec{e}_n$ 写成
$$\vec{e}_n=\epsilon\frac{d\vec{u}\times d\vec{v}}{|d\vec{u}\times d\vec{v}|},$$
$\epsilon$ 可为 $\pm 1$，用于矫正方向。然后，和上面第一型曲线积分的处理方法一样，$I$ 可以表达为对 $u, v$ 的积分式
$$I=\iint_D(\epsilon\vec{j}(x,y,z)\cdot\frac{d\vec{u}\times d\vec{v}}{|d\vec{u}\times d\vec{v}|})|d\vec{u}\times d\vec{v}|=\iint_D\epsilon\vec{j}(x,y,z)\cdot (d\vec{u}\times d\vec{v}),$$
此时积分区域换成 $D$, 即 $u, v$ 的定义域，表明是对 $u, v$ 的积分。现在只剩确定 $\epsilon$ 的正负，这是个比较麻烦的问题。为了说清楚这一点，我们首先要注意一件事，二重积分在化为累次积分的过程中有一个问题，累次积分是多次单变量积分，单变量积分的结果与积分上下限的次序是有关的，交换积分上下限积分结果反号，而二重积分结果不应当与这种次序有关（从二重积分的定义就可以看出，二重积分中没有上下限次序这个概念）。或者说，单变量积分中，线元 $dx$ 可正可负，但是二重积分的面元 $dxdy$ 应当保证为正，所以事实上二重积分在化为累次积分的过程中默认要求积分上限比积分下限大。这个问题在第二型曲面积分中的体现就是 $\vec e_n$ 的指向，我们可以人为构造出曲面 $C$ 的两种参数表达式，使得算出来的 $d\vec{u}\times d\vec{v}$ 方向相反。为了避免这个问题就需要选合适的参数表达式，最保险的方案是，将曲面方程 $C(x,y,z)=0$ 中的一个变量反解出来，比如 $z$，将 $x, y$ 作为参数，曲面的参数式就是
$$\begin{cases} x = x\\ y = y\\ z=z(x,y)\end{cases}, $$
这样求出来的 $d\vec{u}\times d\vec{v}$ 总是指向我们通常约定的曲面的正侧，因此 $\epsilon$ 就可以取为 1（当然如果实际问题中确实是要沿着负侧积分，$\epsilon$ 就应当是 -1）。如果取了其他参数式，可能需要小心地先检验一下 $d\vec{u}\times d\vec{v}$ 的方向。</p>
<p>最后，本文叙述中有些条件和前提略去了，比如 $x, y$ 和 $u, v$ 之间的变换应当满足的条件等等。不严谨之处，敬请见谅。</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>卡诺热机的特别之处</title>
      <link>/post/2016-06-29-the-feature-of-carnot-engine/</link>
      <pubDate>Wed, 29 Jun 2016 01:05:13 +0800</pubDate>
      
      <guid>/post/2016-06-29-the-feature-of-carnot-engine/</guid>
      <description>
      
      <![CDATA[<p>经典热力学中一个很重要的模型是卡诺热机（<a href="https://en.wikipedia.org/wiki/Carnot_heat_engine">Carnot engine</a>），它工作在高温热源和低温热源之间，可以从高温热源吸收热量，然后输出功并在低温热源处释放热量；反过来也可以对卡诺热机输入功，达到将热量从低温热源搬运到高温热源的效果。因此卡诺机是可逆热机，并且是效率最高的热机，有如下卡诺定理<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>（<a href="https://en.wikipedia.org/wiki/Carnot%27s_theorem_(thermodynamics)">Carnot&rsquo;s theorem</a>）</p>
<blockquote>
<p>Of all the heat engines working between two given temperatures, none is more efficient than a Carnot eigine.</p>
</blockquote>
<p>但是最近重看 <em>Concepts in Thermal Physics</em> 时我对卡诺定理的证明过程产生了很大的困惑。教材上和维基上的<a href="https://en.wikipedia.org/wiki/Carnot%27s_theorem_(thermodynamics)#Proof">证明方法</a>是一致的，我不觉得这个证明方法有误，困惑在于，证明过程中似乎没有用到卡诺热机的特殊性质，没有哪里体现出一定要是卡诺热机，事实上用其它任意一个可逆热机放到这个证明过程中都可以证明该热机的效率是所有热机中最高的。</p>
<p>直到我看到课本接下来介绍了一个卡诺定理的推论，</p>
<blockquote>
<p>All reversible engines working between two temperatures have the same efficiency $\eta_{Carnot}$.</p>
</blockquote>
<p>既然所有的可逆热机都可以达到卡诺热机的效率，是不是说明可逆热机只能是卡诺热机？或者可以通过某种变化等效为卡诺热机？。我搜寻脑海中的回忆，确定上新课时我没有得出过这个结论，必须仔细推敲一番。</p>
<p>只有卡诺热机才是可逆热机吗？“除了绝热和等温过程外，还有其它可逆过程，选一些可逆过程连接成一个可逆循环就能构成一个可逆热机！”我很快发现这个想法有问题。</p>
<p>首先明确热机逆过程的概念：保持其它配置不变，将能量流动箭头反向，吸热变放热，对外做功变成外部对热机做功。现在对 1mol 导热良好的理想气体，考察这样一个过程：</p>
<ol>
<li>从初态 $(p_1,V_1)$ 等容加热到 $(p_2, V_1)$；</li>
<li>从 $(p_2, V_1)$ 绝热膨胀到 $(p_3, V_2)$ ；</li>
<li>从 $(p_3, V_2)$ 等温压缩至 $(p_1, V_1)$ 。</li>
</ol>
<p>用这样一个过程可以构造一个热机，正过程和“逆过程”分别如下：</p>
<p><img src="/img/carnot-engine/workflow.svg" alt="图1 正过程和“逆过程”"></p>
<p>再画出对应的净效果：</p>
<p><img src="/img/carnot-engine/pureEffect.svg" alt="图2 正过程和“逆过程”的净效果"></p>
<p>图1左边的过程中气体经历的每一步都是__可逆变化__，但是构造出来的热机却不是__可逆热机__，原因在于，第1步中气体的等容加热需要和高温热源 $T_2$ 接触才能完成，这是一个单纯的热量流动过程，热力学第二定律的克劳修斯表述禁止了其逆过程的发生：在没有额外辅助的条件下，气体不可能与高温热源 $T_2$ 接触的同时放热等容降温。但是气体本身经历的是一个可逆变化，只要气体再去和另一个低温热源接触，就能放热等容降温回到原来的状态。退一步说，如果一定要热机逆着循环运行（图1右），那么这一步中气体必须和低温热源 $T_1$ 接触，对应到图2中就是右边 $Q_1$ 的箭头只能指向 $T_1$ 而不可能指向 $T_2$。把图2和卡诺热机的正逆运行图对比，就能知道这种热机不可逆了。</p>
<p>想清楚了上面这个例子后，再来看卡诺热机就不难理解为什么它是可逆的了。卡诺机和热源接触时经历的是等温过程，气体的温度和热源的温度是一样的，热力学第二定律只对有温度差时的热量流动方向做出了限制，但此处是等温的，只要把气体对外做功变成外部对气体做功，就能实现从吸热到放热的转变；而气体温度的变化是通过绝热过程完成的，绝热过程中没有熵变，也是可逆的。所以整个过程都是可逆的，卡诺机是一个可逆机。</p>
<p>回到开始的问题，是不是只有卡诺热机才是可逆机呢？为什么？回答：不是，但是可逆热机中的过程只能由等温过程和绝热过程组成。因为，热机逆运行受到热力学第二定律的制约，尤其是热量流动箭头能否反向。要么不存在热量流动，即绝热过程；要么热量在相同温度物体间流动，即等温过程。涉及到其它过程时，必须要修改热机的结构才能逆运行（比如例子中接触高温热源变成低温热源）。卡诺循环是最简单的满足条件的循环过程，当然也可以用更多绝热和等温过程去构造更复杂的可逆热机。</p>
<p>总结一下，在这个问题中有机个概念需要区分，<strong>可逆过程</strong>、__可逆机__和气体经历的__可逆变化__并不是一回事。感想就是，把想法都写下来，对理清思路有很大帮助。想通了这些问题后，再回过头看看写下的东西，似乎全是废话，给读者见笑。但是自己没开窍前还是相当困惑的，写下来防止以后再一次忘记。</p>
<p>如果读者有什么见解和想法，欢迎在留言区指正和一起讨论。</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><em>Concepts in Thermal Physics, 2nd Edition</em>, Stephen J.Blundell &amp; Katherine M.Blundell.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]>
      
      </description>
    </item>
    
    <item>
      <title>Install Arch Linux with Plasma in Paralles Desktop</title>
      <link>/post/2016-06-09-install-archlinux-with-plasma-in-parallesdesktop/</link>
      <pubDate>Thu, 09 Jun 2016 17:08:08 +0800</pubDate>
      
      <guid>/post/2016-06-09-install-archlinux-with-plasma-in-parallesdesktop/</guid>
      <description>
      
      <![CDATA[<h2 id="准备工作">准备工作</h2>
<ul>
<li>下载 Arch Linux <a href="https://www.archlinux.org/download/">镜像</a></li>
<li>新建虚拟机。因为要安装 Plasma，建议内存至少1G。</li>
</ul>
<h2 id="硬盘分区">硬盘分区</h2>
<p>启动虚拟机，开始安装，</p>
<p><img src="https://i.imgur.com/3siPvUb.png" alt="由光盘镜像引导启动后的界面"></p>
<p>首先需要对硬盘分区。输入命令 <code>cfdisk</code> 可以打开半图形化的分区工具。首先<code>cfdisk</code>会让选择分区表类型，选择第二种<code>dos</code>。然后进入到分区界面，通过下面的菜单<code>New</code>可以新建分区。我采用的分区方案如下，16G给系统，48G给文件，注意将系统区标记为<code>Bootable</code>。</p>
<p><img src="https://i.imgur.com/gZoKUgF.png" alt="分区方案"></p>
<p>完成后选择<code>Write</code>将分区方案写入硬盘生效，然后<code>Quit</code>。</p>
<p>格式化硬盘分区</p>
<pre><code class="language-sh">mkfs.ext4 /dev/sda1
mkfs.ext4 /dev/sda2
</code></pre>
<p>挂载分区，sda1 挂载到<code>/mnt</code>，sda2 挂载到到<code>/mnt/home</code></p>
<pre><code class="language-sh">mount /dev/sda1 /mnt
mkdir /mnt/home
mount /dev/sda2 /mnt/home
</code></pre>
<h2 id="安装-arch-linux">安装 Arch Linux</h2>
<p>配置镜像源（country=你所在的地区代码）</p>
<pre><code class="language-sh">curl -o /etc/pacman.d/mirrorlist &quot;https://www.archlinux.org/mirrorlist/?country=CN&amp;protocol=http&amp;ip_version=4&quot;
</code></pre>
<p>打开 mirrorlist，反注释掉想要使用的镜像源</p>
<pre><code class="language-sh">nano /etc/pacman.d/mirrorlist
</code></pre>
<p>安装 Arch Linux</p>
<pre><code class="language-sh">pacstrap /mnt base base-devel
</code></pre>
<p><img src="https://i.imgur.com/qkazApk.png" alt="安装过程"></p>
<p>完成后，进入新安装的系统进行配置</p>
<pre><code class="language-sh">arch-chroot /mnt
</code></pre>
<p>首先设置 Root 密码</p>
<pre><code class="language-sh">passwd
</code></pre>
<p>设置时区，可以通过<code>date</code>命令测试时区是否设置正确</p>
<pre><code class="language-she">ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
</code></pre>
<p>设置主机名</p>
<pre><code class="language-sh">echo Archlinux-PD &gt; /etc/hostname
</code></pre>
<p>生成语言配置。首先打开<code>/etc/locale.gen</code>，反注释掉所需要的语言（en_US.UTF8、zh_CN.UTF8），然后执行命令<code>locale-gen</code>。</p>
<pre><code class="language-sh">nano /etc/locale.gen
locale-gen
</code></pre>
<p>安装启动引导 grub</p>
<pre><code class="language-sh">pacman -S grub
grub-install /dev/sda
</code></pre>
<p>配置 grub</p>
<pre><code class="language-sh">mkinitcpio -p linux
grub-mkconfig -o /boot/grub/grub.cfg
</code></pre>
<p><img src="https://i.imgur.com/hQt0Son.png" alt="配置 grub"></p>
<p>开启网络，然后退出新系统，回到<code>arch-root</code>命令之前的界面。</p>
<pre><code class="language-sh">systemctl enable dhcpcd
exit
</code></pre>
<p>生成 fstab</p>
<pre><code>genfstab /mnt &gt;&gt; /mnt/etc/fstab
</code></pre>
<p>umount 挂载的磁盘，重启虚拟机。</p>
<pre><code class="language-sh">umount /mnt/home
umount /mnt
reboot
</code></pre>
<h2 id="安装-plasma">安装 Plasma</h2>
<p>如果一切顺利重启后可以看到 grub 启动菜单</p>
<p><img src="https://i.imgur.com/zin9rgS.png" alt="grub 启动菜单"></p>
<p>进入新安装好的系统，以 root 用户登录，密码就是之前执行<code>passwd</code>命令时输入的密码。</p>
<p>先测试一下网络连接情况</p>
<pre><code class="language-sh">ping -c 5 archlinux.org
</code></pre>
<p>如果连接不通，可以尝试手动开启网络</p>
<pre><code class="language-sh">systemctl start dhcpcd
ip addr
</code></pre>
<p>更新一下软件包，然后开始安装 Plasma 和其它必要的软件包。</p>
<pre><code class="language-sh">pacman -Syu
pacman -S xorg plasma zsh git konsole firefox dolphin alsa-utils 
</code></pre>
<p>解释一下，</p>
<ul>
<li>xorg 是 X 窗口服务器，plasma 即是 KDE5</li>
<li>git 和 zsh 没什么好说的</li>
<li>konsole 是 KDE 下的默认终端模拟器，firefox是火狐浏览器，dolphin 是文件管理器</li>
<li>alsa-utils 是声音模块</li>
</ul>
<p>安装完成后，配置一下 X（下面的命令注意 X 要大写）</p>
<pre><code class="language-sh">Xorg -configure
</code></pre>
<p>上面的命令会生成一份配置模版<code>/root/xorg.conf.new</code>，用编辑器打开。</p>
<p>因为我用的是非 retina 屏幕的 MBP 13， 所以在<code>Section &quot;Screen&quot;</code>下的<code>Section &quot;Display&quot;</code>中添加一行<code>Modes &quot;1280x800&quot;</code>就好了。保存，将配置文件移动到合适的位置，然后启用<code>sddm</code>服务。</p>
<pre><code class="language-sh">mv /root/xorg.conf.new /etc/X11/xorg.conf
systemctl enable sddm
</code></pre>
<p>添加用户并设置密码，把 yourname 换成你喜欢的名字</p>
<pre><code class="language-sh">useradd -m -G wheel -s /usr/bin/zsh yourname
passwd yourname
</code></pre>
<p>把自己添加到sudoer中</p>
<pre><code class="language-sh">nano /etc/sudoers
</code></pre>
<p>在末尾添加一行<code>yourname ALL=(ALL) ALL</code></p>
<p>把自己添加到audio用户组中，这样可以开启声音</p>
<pre><code class="language-sh">gpasswd -a yourname audio
</code></pre>
<p>安装一些不错的字体</p>
<pre><code class="language-sh">pacman -S ttf-arphic-uming ttf-arphic-ukai ttf-bitstream-vera adobe-source-han-sans-otc-fonts ttf-fira-sans
</code></pre>
<p>移除没什么用的媒体中心</p>
<pre><code class="language-sh">sudo pacman -R plasma-mediacenter
</code></pre>
<p>到此基本上就完成了，reboot 之后应该就能看到赏心悦目的 Plasma 界面了。</p>
<p><img src="https://i.imgur.com/6sIFdh5.png" alt="Plasma 真漂亮啊！"></p>
<h2 id="其它">其它</h2>
<ul>
<li>
<p>以上过程为本人安装成果的整理记录，可能有疏漏，不一定适用于读者的情况。</p>
</li>
<li>
<p>字体的问题还没有完全解决，尤其是终端下的中文字体。</p>
</li>
<li>
<p>Parallels Tools 似乎和 Arch Linux 不太兼容的样子，虽然能安装上去，但是文件共享一直有问题。具体安装细节可能之后再补充。</p>
</li>
<li>
<p>开启 ssh 服务</p>
</li>
</ul>
<pre><code class="language-sh">pacman -S openssh
systemctl enable sshd.service
systemctl start sshd
</code></pre>
<ul>
<li>
<p>通过<code>ip route</code>可以查看本机IP，必要时可以从 OS X 端 ssh 登陆到 Arch，也可以用<code>scp</code>往虚拟机里传文件</p>
</li>
<li>
<p>Last but maybe the most important, for some Asian users,</p>
</li>
</ul>
<pre><code class="language-sh">pacman -S shadowsocks-libev
nano /etc/shadowsocks/config.json
systemctl enabnle shadowsocks-libev@config
systemctl start shadowsocks-libev@config
</code></pre>
<h3 id="参考资料">参考资料</h3>
<ol>
<li><a href="http://www.cs.columbia.edu/~jae/4118-LAST/arch-setup-2015-1.html">Setting up an Arch Linux VM in VirtualBox</a></li>
<li>Youtube video: <a href="https://www.youtube.com/watch?v=Wqh9AQt3nho">How to Install Arch Linux</a></li>
<li>Youtube video: <a href="https://www.youtube.com/watch?v=okct6NwqF_Y">How to Install Arch Linux 2016 + KDE Plasma 5 + Open-VM-Tools on VMware Player Free</a></li>
<li><a href="https://yzalog.tk/ss-via-stunnel/">Yza Log&rsquo;s Blog</a></li>
<li><a href="https://wiki.archlinux.org">ArchWiki</a></li>
<li><a href="https://linuxtoy.org/archives/archlinux-guide.html">打造完美的 Linux 桌面 — Archlinux 2007.08-2 (电子版)
</a></li>
</ol>
]]>
      
      </description>
    </item>
    
    <item>
      <title>Embed figures of eps format in LaTeX papers -- with dvips</title>
      <link>/post/2016-01-09-embed-figures-of-eps-format-in-latex-papers-with-dvips/</link>
      <pubDate>Sat, 09 Jan 2016 17:08:08 +0800</pubDate>
      
      <guid>/post/2016-01-09-embed-figures-of-eps-format-in-latex-papers-with-dvips/</guid>
      <description>
      
      <![CDATA[<p>At the end of my earlier <a href="/post/2015-05-17-Embed-figures-of-eps-format-in-LaTeX-files/">post</a> on embedding figures of eps format into LaTeX papers, I wrote that we may get an ugly reference article list if <code>dvips</code> is used to generate the PDF file, which is caused by the package <code>hyperref</code>. Certainly, removing <code>\usepackage{hyperref}</code> is the most simple solution to this problem. But what if we do need them two simultaneously?</p>
<p>Today when I am trying PSTricks, I find dvipdfmx is unable to generate correct figures, while dvips is able. I guess that PSTricks needs the postscript of the article, while dvipdfmx generates the PDF copy from the dvi copy directly.</p>
<p>The problem is finally solved when I find <a href="http://tex.stackexchange.com/questions/121837/hyperref-wrong-dvi-mode-driver-option-dvips-hyperref-because-pdftex-or-luat">this question</a> on stackexchange. Some extra parameters are needed when hyperref is used with dvips:</p>
<pre><code class="language-tex">\usepackage[dvips,breaklinks]{hyperref}
</code></pre>
<p><strong>However, why do we insist on latex? why not switch to xelatex?</strong></p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>brew with a socks5 proxy</title>
      <link>/post/2015-10-03-brew-with-a-socks5-proxy/</link>
      <pubDate>Sat, 03 Oct 2015 22:47:28 +0800</pubDate>
      
      <guid>/post/2015-10-03-brew-with-a-socks5-proxy/</guid>
      <description>
      
      <![CDATA[<p>Finally, I find the right way to use homebrew.</p>
<ol>
<li>Let http requests of git go through a socks5 proxy</li>
</ol>
<pre><code class="language-shell">git config --global http.proxy 'socks5://127.0.0.1:1081'
</code></pre>
<ol start="2">
<li>Since homebrew doanloads files using curl, set a socks proxy for curl: just add <code>proxy=socks5://127.0.0.1:1081</code> to <code>~/.curlrc</code>.</li>
</ol>
<p>Too much time has been wasted because of the poor network.</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>Make unix2doc a system service of OS X</title>
      <link>/post/2015-06-02-small-trick-unix2dos-as-service/</link>
      <pubDate>Tue, 02 Jun 2015 00:32:49 +0800</pubDate>
      
      <guid>/post/2015-06-02-small-trick-unix2dos-as-service/</guid>
      <description>
      
      <![CDATA[<p>Revising an academic paper is really a hard work. What makes things worse is that WinEdit used by my advisor is only capable of handling .tex files with <code>CRLF</code> line breaks while TeXShop.app uses <code>LF</code> as a line ending.</p>
<p>Although I can use other applications like TextWrangle.app to convert text files between the two formats, I really do not want to open an extra window. So I find unix2dox, a command line tool that is developed to &ldquo;convert text between DOS, UNIX, and Mac formats&rdquo;. And with Automator, I get a better solution.</p>
<ol>
<li>
<p>Install unix2dos: <code>brew install unix2dos</code></p>
</li>
<li>
<p>Create a new service in Automator. Drag a &ldquo;Run Shell Script&rdquo; action from the Library and type in the following commands:</p>
</li>
</ol>
<pre><code class="language-sh">for f in &quot;$@&quot;
do 
    unix2dos &quot;$f&quot;
done
</code></pre>
<p>Make sure that choose &ldquo;as argument&rdquo; for the option &ldquo;Pass input&rdquo;.
<img src="https://i.imgur.com/vbDeBZr.png" alt=""></p>
<ol start="3">
<li>&ldquo;unix2dos&rdquo; will show up in the services when you right click on any text files.</li>
</ol>
]]>
      
      </description>
    </item>
    
    <item>
      <title>Embed figures of eps format in LaTeX papers</title>
      <link>/post/2015-05-17-embed-figures-of-eps-format-in-latex-files/</link>
      <pubDate>Sun, 17 May 2015 09:07:14 +0800</pubDate>
      
      <guid>/post/2015-05-17-embed-figures-of-eps-format-in-latex-files/</guid>
      <description>
      
      <![CDATA[<p>Usually, I use xelatex to compile LaTeX files instead of latex, since the former one is able to generate PDF files directly with a faster speed and an excellent support for Chinese characters. However, recently I have no choice but to use latex again, since it is preferred by APS. Luckily, academic papers often does not contain Chinese characters, thus I don&rsquo;t need to use the terrible CJK package again.</p>
<p>Now to generate a PDF format copy, the shell commands are</p>
<pre><code class="language-sh">latex paper.tex;
bibtex peper;
latex peper;
latex paper;
dvipdfmx paper.dvi
</code></pre>
<p>But a new problem, which is about figures, emerges. APS recommends eps format for the figure files. But dvipdfmx does not support eps format. So I got blanks at the positions where the figures should be placed. Although dvipdfmx can not directly handle eps files, it can temporarily call Ghostscript to convert eps files into PDF format when generating the paper&rsquo;s PDF copy. PDF format is supported by dvipdfmx. Unluckily, Ghostscript is generally not installed in OS X and I wasted a whole morning on struggling with the horrible blanks.</p>
<p>Installing Ghostscript is easy, just use <a href="https://brew.sh">homebrew</a>:</p>
<pre><code class="language-sh">brew install ghostscript
</code></pre>
<p>After that, parameter <code>[dvipdfmx]</code> is indispensable if the package hyperref is used.</p>
<pre><code class="language-tex">\usepackage[dvipdfmx]{hyperref}
</code></pre>
<p>Certainly, PDF copy can be generated by other commands besides dvipdfmx. For example,</p>
<pre><code class="language-sh">dvips paper.dvi
ps2pdf paper.ps
</code></pre>
<p>But you may get an ugly reference article list. :(</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>设置 Mathematica 的默认字号</title>
      <link>/post/2015-02-25-set-default-fontsize-for-mathematica/</link>
      <pubDate>Wed, 25 Feb 2015 17:22:43 +0800</pubDate>
      
      <guid>/post/2015-02-25-set-default-fontsize-for-mathematica/</guid>
      <description>
      
      <![CDATA[<p>Mathematica 的默认字体看起太小，尤其我的 MacBook 没有配 Retina 屏幕，看起来伤眼睛。</p>
<p>在 Mathematica 的 Format-&gt;Option Inspector 中以<code>fontsize</code>搜索<code>Global Preference</code>，修改<code>12</code>为<code>16</code>。但是，尝试多次，重启 Mathematica 也无效。<del>要对 Mathematica 粉转黑了！</del></p>
<p>最后，在 <a href="http://mathematica.stackexchange.com/questions/59283/changing-the-default-font-size">StackExchange</a> 找到了一个曲线救国的方法：NotebookOptions-&gt;Display Options-&gt;Magnification，把<code>1</code>修改为<code>1.5</code>或其他，即把整个 notebook 的显示全局放大。</p>
<p><img src="http://ww4.sinaimg.cn/large/eb7f99fcgw1eplqnlb507j20l80gxju9.jpg" alt="设置全局放大"></p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>A template of beamer</title>
      <link>/post/2014-12-01-a-beamer-template/</link>
      <pubDate>Mon, 01 Dec 2014 00:17:10 +0800</pubDate>
      
      <guid>/post/2014-12-01-a-beamer-template/</guid>
      <description>
      
      <![CDATA[<p>Just a template of beamer</p>
<pre><code class="language-tex">%!Mode:: &quot;TeX:UTF-8&quot;
%!TEX program = xelatex
\documentclass[10pt]{beamer}
%[]中加t可以使内容从顶部开始

%英文字体
\usepackage{booktabs}
\usepackage{fontspec,xltxtra,xunicode}
\defaultfontfeatures{Mapping=tex-text}
\setromanfont[Mapping=tex-text]{TimesNewRomanPSMT}
\setsansfont[Scale=MatchLowercase,Mapping=tex-text]{Gill Sans}
\setmonofont[Scale=MatchLowercase]{Courier}

%中文设置
\usepackage[slantfont,boldfont]{xeCJK}
\setCJKmainfont[BoldFont=AdobeHeitiStd-Regular]{AdobeHeitiStd-Regular}
\setCJKfamilyfont{Song}{AdobeSongStd-Light}
\setCJKfamilyfont{Hei}{AdobeHeitiStd-Regular}
\setCJKfamilyfont{Kai}{AdobeKaitiStd-Regular}
\setCJKfamilyfont{Hupo}{STHupo}
\setCJKfamilyfont{FS}{AdobeFangsongStd-Regular}
\XeTeXlinebreaklocale &quot;zh&quot; %中文断行用

%beamer配置
\usetheme{Luebeck}%
\setbeamertemplate{headline}{}
\setbeamertemplate{navigation symbols}{} %去掉导航条
\usefonttheme{serif}
%加上sectionpage
\AtBeginSection[]{
\begin{frame}
\begin{center}
\begin{beamercolorbox}[sep=8pt,center]{part title}
\usebeamerfont{part title}{\large \insertsection}
\end{beamercolorbox}
\end{center}
\end{frame}
}

%数学设置
\usepackage{amssymb}
\usepackage{amsmath}

%插图
\usepackage{graphicx}

%作图
\usepackage{pgf,tikz}
\usetikzlibrary{arrows}

\title[简略标题]{titlepage上显示的完整标题}
\author[作者]{titlepage上显示的完整作者信息，可以包括邮件地址}
\institute[简略机构]{titlepage上要显示的完整机构}
\date{2014.mm.dd}

\begin{document}
%标题页
\frame{\titlepage}
%outline
\section[Outline]{}
\frame{
\frametitle{主要内容}
\tableofcontents
}
%正文
\section{章节1}
\frame   %[allowframebreaks]似乎与\pause冲突
{\frametitle{页标题}
		\begin{itemize}
		\item 信息1
		\pause
		\item 信息2
		\only&lt;3&gt;{
		\item 信息3}
		\item 信息4
		\end{itemize}
}

\section{章节2}
\frame[allowframebreaks]{
\frametitle{页标题}
}

%感谢页
\frame{
 \begin{center}
 \begin{beamercolorbox}[sep=8pt,center]{part title}
\usebeamerfont{part title}{\huge Thank You!}
\end{beamercolorbox}
 \end{center}
}

\end{document}
</code></pre>]]>
      
      </description>
    </item>
    
    <item>
      <title>配置 Sublime Text 的 LaTeX 写作环境</title>
      <link>/post/2014-11-20-latex-with-sublime-text-3/</link>
      <pubDate>Thu, 20 Nov 2014 23:32:35 +0800</pubDate>
      
      <guid>/post/2014-11-20-latex-with-sublime-text-3/</guid>
      <description>
      
      <![CDATA[<blockquote>
<p>又开始折腾了。。。</p>
</blockquote>
<h2 id="安装-latextools">安装 LaTeXTools</h2>
<ol>
<li>View -&gt; Show Console，打开终端界面，将 Package Control <a href="https://sublime.wbond.net/installation">官网</a>给出的代码复制粘贴进终端，回车完成 Package Control 的安装。</li>
<li><code>Command-Shift-P</code>调出命令窗口，输入<code>Install</code>，等待一会，之后输入<code>LaTeXTools</code>，回车完成安装，时常取决于网络。</li>
<li>安装 <a href="http://skim-app.sourceforge.net/">Skim</a>，用于预览编译好的PDF文件。</li>
</ol>
<h2 id="初始设置">初始设置</h2>
<h3 id="latextools">LaTeXTools</h3>
<ol>
<li>初始化：按下<code>Command-Shift-P</code>，输入&quot;latextools&quot;，选择&quot;LaTeXTools:Reconfigure&hellip;&quot;，回车。
<img src="http://ww2.sinaimg.cn/large/eb7f99fcgw1emibebpra4j20jm0d5n05.jpg" alt="LaTeXTools 的初始化"></li>
<li>设置编译时输出详细日志：前往<code>~/Library/Application Support/Sublime Text 3/Packages/User/</code>，打开<code>LaTeXTools.sublime-settings</code>，将<code>&quot;display_log&quot; : false,</code>改为<code>&quot;display_log&quot; : true,</code>。这样编译时心里有个底，看屏幕上输出一段一段高端大气的代码然后生成精美的 paper 的时候的快感怎么能少？</li>
<li>设置默认使用 XeLaTeX 编译文件：虽然可以去修改<code>LaTeXTools.sublime-settings</code>,不过最简单安全的方法还是在自己的 TeX 源文件开头加上<code>%!TEX program = xelatex</code>，修改一下自己的模板就一劳永逸了，难道每次都从输入<code>\begin{document}</code>开始？</li>
</ol>
<h3 id="skim">Skim</h3>
<p>在 Skim 的选项-同步中，不要勾选“检查文件变化”，“同步支持”选择“Sumlime Text”
<img src="http://ww2.sinaimg.cn/large/eb7f99fcgw1emibc7nfn6j20f00bxmyg.jpg" alt="Skim 设置"></p>
<h2 id="skim-与-sublime-text-之间的跳转按键">Skim 与 Sublime Text 之间的跳转按键</h2>
<ul>
<li>Skim：<code>Command-Shift-单击</code></li>
<li>Sublime Text：<code>Command-L</code>,松开<code>Command</code>，迅速按下<code>J</code></li>
</ul>]]>
      
      </description>
    </item>
    
    <item>
      <title>无外场二维理想 Bose 系统不存在 BEC 的证明</title>
      <link>/post/2014-08-26-no-bec-in-2d-ideal-bose-gases-without-outfields/</link>
      <pubDate>Tue, 26 Aug 2014 01:04:48 +0800</pubDate>
      
      <guid>/post/2014-08-26-no-bec-in-2d-ideal-bose-gases-without-outfields/</guid>
      <description>
      
      <![CDATA[<p>Bose 气体满足 Bose-Einstein 分布
$$
\begin{equation}
\langle n_s \rangle=\dfrac{1}{e^{\beta(E_s-\mu)}-1}
\end{equation}$$
其中$\beta=\dfrac{1}{k_BT}$. 因为 $\langle n_s \rangle\geqslant0$，所以 $E_s-\mu\geqslant0$。如果基态能量取为0，则化学势需要满足$\mu\leqslant0$。</p>
<p>二维情况下，气体的态密度为$$
\begin{equation}
g(k)d k=\frac{1}{4} \frac{2\pi kd k}{(\pi/L)^2}=\frac{L^2k}{2\pi}d k=\frac{Ak}{2\pi}d k
\end{equation}$$
非相对论情况下，粒子的能动量关系为$$
\begin{equation}
E=\frac{\hbar k^2}{2m}
\end{equation}$$
所以可以将态密度改写为以能量为自变量$$
\begin{equation}
g(E)d E=g(k)\frac{\partial k}{\partial E}d E=\frac{mL^2}{2\pi\hbar}d E
\end{equation}$$</p>
<p>化学势 $\mu$ 与粒子数 $N$ 之间满足关系
$$
\begin{eqnarray}
(2S+1)\int_0^\infty{\langle n_s\rangle g(E)dE}&amp;=&amp;N\newline
\label{化学势与粒子数关系}(2S+1)\frac{Am}{2\pi \hbar}\int_0^\infty{\frac{d E}{ e^{\beta(E-\mu)}-1}}&amp;=&amp;N
\end{eqnarray}$$</p>
<p>把 $\beta(E-\mu)$ 记为 $x$，式$\ref{化学势与粒子数关系}$可化为：
$$
\begin{equation}\label{simplified}
\frac1\beta\int_{-\mu\beta}^{\infty}{\frac{d x}{e^x-1}}=\frac{2\pi\hbar N}{(2S+1)Am}
\end{equation}$$</p>
<p>左侧的积分可以算出来
$$\begin{equation}
\frac{1}{\beta}\int_{-\mu\beta}^{\infty}{\frac{dx}{e^x-1}}=\ln\frac{1}{(1-e^{\mu\beta})^{\frac1\beta}}
\end{equation}
$$</p>
<p>代入式\ref{simplified}可以把 $\mu$ 表示出来$$
\begin{equation}\label{mu}
\mu=\frac1\beta\ln(1-e^{-c\beta}),c=\frac{2\pi\hbar N}{(2S+1)Am}
\end{equation}$$
从式\ref{mu}可以看出，$\mu$ 始终满足 $\mu\leqslant0$，当 $\beta \to \infty$ 即 $T\to 0$ 时，$\mu$ 从0的左侧趋向于0，所以可以说临界温度 $T_c=0K$，即 Bose-Einstein 凝聚不可能发生。</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Tue, 29 Apr 2014 23:14:19 +0800</pubDate>
      
      <guid>/about/</guid>
      <description>
      
      <![CDATA[<p>I am now a physics Ph.D. student working on ultracold atom theories. At the same
time I am interested in computer science and software engineering.</p>
<p>Update(2021): I am now a software engineer after obtaining my physics Ph.D. degree.</p>
<div style="display: none">Previously I had suffered from the question that whether I should continue studying physics or switch to becoming a programmer, especially considering the fact that I was only admitted into a mediocre physics Ph.D. program. But finally I am determined to get the degree and complete my childhood dream, even if I may have to leave academia after graduation.</div>
<p>Most of the contents on this site are about techniques, as well as physics and
my daily life. The title of this site contains my net ID &ldquo;lencerf&rdquo; and a word
&ldquo;walk&rdquo;, which comes from my undergraduate physics research project on
<a href="https://en.wikipedia.org/wiki/Quantum_walk">quantum walk</a>. By the way,
&ldquo;lencerf&rdquo; is an inverse of the name of the famous French physicist
<a href="https://en.wikipedia.org/wiki/Augustin-Jean_Fresnel">Augustin-Jean Fresnel</a>.
But &ldquo;lenserf&rdquo; has been used by someone, so I changed &ldquo;s&rdquo; into &ldquo;c&rdquo;. It is really
not paraphrased as &ldquo;Lancer&rsquo;s luck value is F&rdquo; if you have watched
<a href="http://typemoon.wikia.com/wiki/Fate_series">Fate series</a> before.</p>
<p>Nice to meet you! You can find my codes on <a href="https://github.com/Lencerf">GitHub</a>,
chat with me on <a href="https://telegram.me/Lencerf">Telegram</a>, and get my GPG public
key on <a href="https://keybase.io/lencerf">keybase</a>.</p>
]]>
      
      </description>
    </item>
    
    <item>
      <title>Open source contributions</title>
      <link>/pages/open-source-contributions/</link>
      <pubDate>Tue, 29 Apr 2014 23:10:11 +0800</pubDate>
      
      <guid>/pages/open-source-contributions/</guid>
      <description>
      
      <![CDATA[<h2 id="maintained-by-me">Maintained by me</h2>
<ul>
<li>
<p><a href="https://github.com/Lencerf/vscode-beancount">vscode-beancount</a>: VSCode extension for Beancount.</p>
</li>
<li>
<p><a href="https://github.com/Lencerf/lumi">lumi</a>: A collection of double-entry accounting tools in Rust.</p>
</li>
<li>
<p><a href="https://github.com/Lencerf/p9cpu">p9cpu</a>: An implementation of the Plan 9 <code>cpu</code> command for Linux in Rust.</p>
</li>
</ul>
<h2 id="contributed-to">Contributed to</h2>
<ul>
<li>
<p>Linux kernel</p>
<ul>
<li><a href="https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git/commit/?id=355bf2e036c954317ddc4a9618b4f7e38ea5a970">scsi: pm80xx: Set stopped phy&rsquo;s linkrate to Disabled</a></li>
<li><a href="https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git/commit/?id=e78276cadb669d3e55cffe66bd166ff3c8572e38">scsi: pm80xx: Fix &lsquo;Unknown&rsquo; max/min linkrate</a></li>
<li><a href="https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git/commit/?id=cc06af0bbc21bcee40d57e3ee569d3a09741dafd">scsi: trace: Print driver_tag and scheduler_tag in SCSI trace</a></li>
<li><a href="https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git/commit/?id=0137b129f215fb5d0209c5c91984b2f44f2d98cc">scsi: pm80xx: Add pm80xx_mpi_build_cmd() tracepoint</a></li>
<li><a href="https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git/commit/?id=8ceddda38d4272683fe0c5d8f310109affae0b63">scsi: pm80xx: Add tracepoints</a></li>
</ul>
</li>
<li>
<p><a href="https://chromium-review.googlesource.com/q/owner:changyuanl@google.com+status:merged">crosvm</a>
(Chrome OS virtual machine)</p>
</li>
<li>
<p><a href="https://u-root.org">u-root project</a></p>
<ul>
<li><a href="https://github.com/u-root/u-root/commits?author=lencerf">u-root/u-root</a></li>
<li><a href="https://github.com/u-root/cpu/commits?author=lencerf">u-root/cpu</a></li>
</ul>
</li>
<li>
<p><a href="https://github.com/rust-vmm">rust-vmm project</a></p>
<ul>
<li><a href="https://github.com/rust-vmm/kvm-ioctls/commits?author=Lencerf">rust-vmm/kvm-ioctls</a></li>
<li><a href="https://github.com/rust-vmm/vfio/commits?author=Lencerf">rust-vmm/vfio</a></li>
</ul>
</li>
<li>
<p><a href="https://github.com/rust-vsock/tokio-vsock/commits?author=Lencerf">rust-vsock/tokio-vsock</a></p>
</li>
<li>
<p><a href="https://github.com/brutella/dnssd/commits?author=Lencerf">brutella/dnssd</a></p>
</li>
</ul>
]]>
      
      </description>
    </item>
    
    <item>
      <title>OS X 上中文 LaTeX 环境的搭建</title>
      <link>/post/2014-04-29-setup-letax-on-osx/</link>
      <pubDate>Tue, 29 Apr 2014 23:10:11 +0800</pubDate>
      
      <guid>/post/2014-04-29-setup-letax-on-osx/</guid>
      <description>
      
      <![CDATA[<blockquote>
<p>又快进入论文季了，统计、数理、生物论文接踵而至。鉴于最近人品有点差，踢个毽球居然还把脚底伤了(囧)，遂来分享一下我个人在 OS Ｘ上摸索的 LaTeX 经验，权当攒人品。</p>
</blockquote>
<blockquote>
<p>本文适用于 Mac OS X，使用 Linux 的同学应当可以类似地搭建，毕竟 *nix 世界都是相通的。至于使用 Windows 的同学，嗯，强烈建议你先安装个 Linux，Windows 的 GB18030 内码太蛋疼了(吐)。</p>
</blockquote>
<p>众所周知，Donald E. Knuth 大神当时发明 TeX 系统时并没有考虑多语言支持问题，所以原生的 LaTeX 是不支持中文的。之前流行的 CCT 和 CJK 宏包实际上是两种外挂，很容易出现比如 pdf 书签乱码之类的问题，是不得已的权益之计。
在此介绍 XeTeX，从底层就支持各种文字包括中文，而且能够直接使用系统自带的字体，并且与原来的 TeX 相兼容。 XeLaTeX 则是与 XeTeX 相应的宏，再搭配上 xeCJK 宏包基本上处理中英文混排就完美了。</p>
<p>首先安装 TeX 基本系统。上 <a href="http://tug.org/mactex/">MaxTeX 主页</a>下载 TeXLive 发行版，建议下载<a href="http://mirror.ctan.org/systems/mac/mactex/mactex-basic.pkg">基本包</a>（&lt;100M）就够了，完整包2G多。下载完后双击pkg一路next就OK。Linux 估计用 <code>apt-get</code> 命令即可。
事实上到了这一步就算完成了，系统里面已经有了 XeLaTeX。随便找一个文本编辑器就可以开始写论文了。写一个.tex 文件，在终端用 xelatex 命令编译就可以生成 pdf 文档。</p>
<p>当然，这样比较繁琐，所以推荐一个类似 WinEdit 的集成环境：<a href="http://pages.uoregon.edu/koch/texshop/texshop.html">TeXShop</a>！
<img src="https://i.imgur.com/B5LGj8n.png" alt="TeXShop">
TeXShop 还需稍微设置一番，才能完美适应要求。打开偏好设置：
在“源代码”页，默认编码选择为Unicode(UTF-8)。不然处理中文的时候会有各种各样<del>奇奇怪怪</del>的问题。
在“排版”页的默认指令处选择“采用键入的指令”，输入&quot;XeLaTeX&quot;。</p>
<p>现在来测试一下吧，在TeXShop里输入</p>
<pre><code>\documentclass{article}
\usepackage{xeCJK}
\setCJKmainfont{SimSun} %设置默认的中文字体为宋体
\begin{document}
Hello! 这是中文测试!
\end{document}
</code></pre>
<p>然后点击 TeXShop 工具栏上的“排版”按钮，应当就能顺利生成一个非常简单的中英文混排的文档了。
<img src="https://i.imgur.com/w1LJI5r.png" alt="中文测试">
看吧，中英文直接混排，别提多方便了。</p>
<p>可以通过在导言区添加以下命令来指定文稿的默认各类中文字体</p>
<pre><code>\setCJKmainfont{&lt;font name&gt;} %设置默认字体
\setCJKsansfont{&lt;font name&gt;} %设置中文sffamily字体
\setCJKmonofont{&lt;font name&gt;} %设置中文ttfamily字体
</code></pre>
<p>也可以单独设置某字体，比如设置仿宋字体：</p>
<pre><code>\setCJKfamilyfont{fangsong}{FangSong}     %使用仿宋字体，放在导言区
\CJKfamily{fangsong} 仿宋字体测试。 %放在正文里面
</code></pre>
<p>以上命令都只会对汉字生效，英文字符不受影响。以上设置命令中读者需要将<code>&lt;font name&gt;</code>替换为自己要使用的字体的 PostScript 名称，具体的某种字体的PostScript 名称可以在系统自带的字体册中查看。
<img src="https://i.imgur.com/3waQ0EU.png" alt="OS X 字体册"></p>
<p>更多有关 XeLaTeX 和 xeCJK 宏包的使用请参考<a href="ttp://www.tex.ac.uk/ctan/macros/xetex/latex/xecjk/xeCJK.pdf">《xeCJK宏包》</a>（作者：孙文昌）。</p>
<p>编写公式方面，推荐 Daum Equation Editor，原先只是 Chrome 的一个扩展，后来也单独在 App Store 上架了。
<img src="https://i.imgur.com/KIRqM0v.png" alt="Daum Equation Editor">
下载地址：<a href="https://itunes.apple.com/us/app/daum-equation-editor/id540665783?mt=12">Mac App Store</a>。当然也可以在 Chrome 商店里面直接搜索。</p>
<p>在文末贴一下我个人在用的模板，导言区基本把平时要用的宏包都加进去了，在 Windows 编译可能很慢。(书呆子)</p>
<p>以上文字及以下代码纯属我个人敲键盘码出，如有雷同和疑问，请去问 Google。(喝茶)</p>
<pre><code class="language-tex">% !Mode:: &quot;TeX:UTF-8&quot;
%!TEX program = xelatex
\documentclass[12pt,a4paper]{article} 
%常用宏包
\usepackage{geometry}
%\geometry{left=3cm,right=3cm,top=3cm,bottom=3.5cm} %页边距设置
\usepackage{url}

%英文字体
\usepackage{booktabs}
\usepackage{fontspec,xltxtra,xunicode}
\defaultfontfeatures{Mapping=tex-text}
\setromanfont[Mapping=tex-text]{TimesNewRomanPSMT}
\setsansfont[Scale=MatchLowercase,Mapping=tex-text]{Gill Sans}
\setmonofont[Scale=MatchLowercase]{Courier}

%中文设置
\usepackage[slantfont,boldfont]{xeCJK}
\setCJKmainfont[BoldFont=AdobeHeitiStd-Regular]{AdobeHeitiStd-Regular}
\setCJKfamilyfont{Song}{AdobeSongStd-Light}
\setCJKfamilyfont{Hei}{AdobeHeitiStd-Regular}
\setCJKfamilyfont{Kai}{AdobeKaitiStd-Regular}
\setCJKfamilyfont{Hupo}{STHupo}
\setCJKfamilyfont{FS}{AdobeFangsongStd-Regular}
\XeTeXlinebreaklocale &quot;zh&quot;%中文断行用
\usepackage{indentfirst} %首行缩进

%数学设置
\usepackage{amssymb}
\usepackage{amsmath}

%插图
\usepackage{graphicx}
%\usepackage{subfig}

%作图
\usepackage{pgf,tikz}
\usetikzlibrary{arrows}

%定义关键词命令 
\newcommand{\keywords}[1]{\textbf{Key words}: #1}
%定义微分算符d和dbar、求导
\newcommand{\dif}{\mathrm{d}}
\newcommand{\dbar}{\mathrm{đ}}
\newcommand{\der}[2]{\displaystyle\frac{\dif #1}{\dif #2}}
\newcommand{\ket}[1]{|#1\rangle}
\newcommand{\ketp}[1]{\ket{#1}_p}
\newcommand{\bra}[1]{\langle #1|}

 %把 Reference 等换成中文
\renewcommand{\contentsname}{目录}
\renewcommand{\listfigurename}{插图目录}
\renewcommand{\listtablename}{表格目录}
\renewcommand{\refname}{参考文献} 
\renewcommand{\abstractname}{摘要}
\renewcommand{\indexname}{索引}
\renewcommand{\tablename}{表}
\renewcommand{\figurename}{图}
\renewcommand{\today}{\number\year 年 \number\month 月 \number\day 日}
\renewcommand{\keywords}[1]{\textbf{关键词}: #1}

%让引用变成上标
\makeatletter
\def\@cite#1#2{\textsuperscript{[{#1\if@tempswa , #2\fi}]}}
\makeatother

\begin{document}
\title{标题 Title}
\author{作者 Author}
 \date{}   %去除标题的日期
 \maketitle
 
 %摘要
\begin{abstract}

\end{abstract}

%关键词
\keywords{关键词}

%论文主体
\section{引言}
\url{https://google.com}
%定理
%\theoremstyle{definition}
\newtheorem{Theorem}{定理}
\begin{Theorem}[最小做用量原理]
\begin{equation}
\delta S=\delta\int_{t_1}^{t_2}L(q,\dot{q},t)dt =0
\end{equation}
\end{Theorem}

\begin{Theorem}[熵增原理]
\begin{equation}
dS&gt;0
\end{equation}
\end{Theorem}

%引理
\newtheorem{lemma}{引理}
\begin{lemma}[Riemann-Lebesgue 引理]\label{RL lemma}
如果 $f(x) \in L^1([a,b])$, 则有
 \begin{equation*}
   \lim\limits_{t \rightarrow \infty} \int_a ^b f(x) \cos{\left(tx \right)} \, \dif{x} = \lim\limits_{t \rightarrow \infty} \int_a ^b f(x)\sin{\left(tx \right)} \, \dif{x} = 0.
 \end{equation*}
\end{lemma}

%引用
\begin{quote}\sl %斜体
谈笑风生。
\end{quote}

\begin{figure}[htb]
\centering
\includegraphics{文件名.png}
\caption{图片标题} \label{标签}
\end{figure}

%以下是参考文献
\bibliographystyle{unsrt}
\bibliography{文献}
\nocite{*}
\end{document}
</code></pre>
]]>
      
      </description>
    </item>
    
    <item>
      <title>Publications</title>
      <link>/pages/publications/</link>
      <pubDate>Tue, 29 Apr 2014 23:10:11 +0800</pubDate>
      
      <guid>/pages/publications/</guid>
      <description>
      
      <![CDATA[<ul>
<li>
<p>C. Lyu, L. Yu, and S. Wu, (2015). <em>Localization in quantum walks on a
honeycomb network</em>.
<a href="https://doi.org/10.1103/PhysRevA.92.052305">Physical Review A, <strong>92</strong>(5), 052305</a>.</p>
</li>
<li>
<p>C. Lyu, and Q. Zhou, (2020). <em>Dynamical quantum phase transitions in
interacting atomic interferometers</em>.
<a href="https://doi.org/10.1103/PhysRevA.101.043605">Physical Review A, <strong>101</strong>(4), 043605</a>.</p>
</li>
<li>
<p>C. Lyu, S. Choudhury, C. Lv, Y. Yan, and Q. Zhou, (2020). <em>Eternal discrete
time crystal beating the Heisenberg limit</em>.
<a href="https://doi.org/10.1103/PhysRevResearch.2.033070">Physical Review Research, <strong>2</strong>(3), 033070</a>.</p>
</li>
<li>
<p>C. Lyu, C. Lv, and Q. Zhou, (2020). <em>Geometrizing quantum dynamics of a
Bose-Einstein condensate</em>.
<a href="https://doi.org/10.1103/PhysRevLett.125.253401">Physical Review Letters, <strong>125</strong>(25), 253401</a>.</p>
</li>
</ul>
]]>
      
      </description>
    </item>
    
  </channel>
</rss>